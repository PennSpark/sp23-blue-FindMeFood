{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport InteractionManager from \"../../Interaction/InteractionManager\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport AnimatedInterpolation from \"./AnimatedInterpolation\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\nfunction _executeAsAnimatedBatch(id, operation) {\n  NativeAnimatedAPI.setWaitingForIdentifier(id);\n  operation();\n  NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n}\nvar AnimatedValue = function (_AnimatedWithChildren) {\n  _inherits(AnimatedValue, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedValue);\n  function AnimatedValue(value, config) {\n    var _this;\n    _classCallCheck(this, AnimatedValue);\n    _this = _super.call(this);\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    if (config && config.useNativeDriver) {\n      _this.__makeNative();\n    }\n    return _this;\n  }\n  _createClass(AnimatedValue, [{\n    key: \"__detach\",\n    value: function __detach() {\n      var _this2 = this;\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n          _this2._value = value - _this2._offset;\n        });\n      }\n      this.stopAnimation();\n      _get(_getPrototypeOf(AnimatedValue.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._value + this._offset;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var _this3 = this;\n      if (this._animation) {\n        this._animation.stop();\n        this._animation = null;\n      }\n      this._updateValue(value, !this.__isNative);\n      if (this.__isNative) {\n        _executeAsAnimatedBatch(this.__getNativeTag().toString(), function () {\n          return NativeAnimatedAPI.setAnimatedNodeValue(_this3.__getNativeTag(), value);\n        });\n      }\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this._offset = offset;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n      }\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this._value += this._offset;\n      this._offset = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this._offset += this._value;\n      this._value = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.stopTracking();\n      this._animation && this._animation.stop();\n      this._animation = null;\n      if (callback) {\n        if (this.__isNative) {\n          NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n        } else {\n          callback(this.__getValue());\n        }\n      }\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.stopAnimation(callback);\n      this._value = this._startingValue;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), this._startingValue);\n      }\n    }\n  }, {\n    key: \"__onAnimatedValueUpdateReceived\",\n    value: function __onAnimatedValueUpdateReceived(value) {\n      this._updateValue(value, false);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(animation, callback) {\n      var _this4 = this;\n      var handle = null;\n      if (animation.__isInteraction) {\n        handle = InteractionManager.createInteractionHandle();\n      }\n      var previousAnimation = this._animation;\n      this._animation && this._animation.stop();\n      this._animation = animation;\n      animation.start(this._value, function (value) {\n        _this4._updateValue(value, true);\n      }, function (result) {\n        _this4._animation = null;\n        if (handle !== null) {\n          InteractionManager.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      }, previousAnimation, this);\n    }\n  }, {\n    key: \"stopTracking\",\n    value: function stopTracking() {\n      this._tracking && this._tracking.__detach();\n      this._tracking = null;\n    }\n  }, {\n    key: \"track\",\n    value: function track(tracking) {\n      this.stopTracking();\n      this._tracking = tracking;\n      this._tracking && this._tracking.update();\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(value, flush) {\n      if (value === undefined) {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n      this._value = value;\n      if (flush) {\n        _flush(this);\n      }\n      _get(_getPrototypeOf(AnimatedValue.prototype), \"__callListeners\", this).call(this, this.__getValue());\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'value',\n        value: this._value,\n        offset: this._offset\n      };\n    }\n  }]);\n  return AnimatedValue;\n}(AnimatedWithChildren);\nexport { AnimatedValue as default };","map":{"version":3,"names":["InteractionManager","NativeAnimatedHelper","AnimatedInterpolation","AnimatedWithChildren","NativeAnimatedAPI","API","_flush","rootNode","animatedStyles","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","_executeAsAnimatedBatch","id","operation","setWaitingForIdentifier","unsetWaitingForIdentifier","AnimatedValue","value","config","Error","_startingValue","_value","_offset","_animation","useNativeDriver","__makeNative","__isNative","getValue","__getNativeTag","stopAnimation","stop","_updateValue","toString","setAnimatedNodeValue","offset","setAnimatedNodeOffset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","callback","stopTracking","__getValue","animation","handle","__isInteraction","createInteractionHandle","previousAnimation","start","result","clearInteractionHandle","_tracking","__detach","tracking","flush","undefined","type"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/Animated/nodes/AnimatedValue.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type Animation, {EndCallback} from '../animations/Animation';\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\nimport type AnimatedNode from './AnimatedNode';\nimport type AnimatedTracking from './AnimatedTracking';\n\nimport InteractionManager from '../../Interaction/InteractionManager';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport type AnimatedValueConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\nfunction _flush(rootNode: AnimatedValue): void {\n  const animatedStyles = new Set<AnimatedValue | AnimatedNode>();\n  function findAnimatedStyles(node: AnimatedValue | AnimatedNode) {\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the error\n     * delete this comment and run Flow. */\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  // $FlowFixMe[prop-missing]\n  animatedStyles.forEach(animatedStyle => animatedStyle.update());\n}\n\n/**\n * Some operations are executed only on batch end, which is _mostly_ scheduled when\n * Animated component props change. For some of the changes which require immediate execution\n * (e.g. setValue), we create a separate batch in case none is scheduled.\n */\nfunction _executeAsAnimatedBatch(id: string, operation: () => void) {\n  NativeAnimatedAPI.setWaitingForIdentifier(id);\n  operation();\n  NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n}\n\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue\n */\nexport default class AnimatedValue extends AnimatedWithChildren {\n  _value: number;\n  _startingValue: number;\n  _offset: number;\n  _animation: ?Animation;\n  _tracking: ?AnimatedTracking;\n\n  // $FlowFixMe[missing-local-annot]\n  constructor(value: number, config?: ?AnimatedValueConfig) {\n    super();\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    this._startingValue = this._value = value;\n    this._offset = 0;\n    this._animation = null;\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  __detach() {\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n        this._value = value - this._offset;\n      });\n    }\n    this.stopAnimation();\n    super.__detach();\n  }\n\n  __getValue(): number {\n    return this._value + this._offset;\n  }\n\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setvalue\n   */\n  setValue(value: number): void {\n    if (this._animation) {\n      this._animation.stop();\n      this._animation = null;\n    }\n    this._updateValue(\n      value,\n      !this.__isNative /* don't perform a flush for natively driven values */,\n    );\n    if (this.__isNative) {\n      _executeAsAnimatedBatch(this.__getNativeTag().toString(), () =>\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value),\n      );\n    }\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setoffset\n   */\n  setOffset(offset: number): void {\n    this._offset = offset;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n   */\n  flattenOffset(): void {\n    this._value += this._offset;\n    this._offset = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#extractoffset\n   */\n  extractOffset(): void {\n    this._offset += this._value;\n    this._value = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#stopanimation\n   */\n  stopAnimation(callback?: ?(value: number) => void): void {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    if (callback) {\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n      } else {\n        callback(this.__getValue());\n      }\n    }\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#resetanimation\n   */\n  resetAnimation(callback?: ?(value: number) => void): void {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(\n        this.__getNativeTag(),\n        this._startingValue,\n      );\n    }\n  }\n\n  __onAnimatedValueUpdateReceived(value: number): void {\n    this._updateValue(value, false /*flush*/);\n  }\n\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  interpolate<OutputT: number | string>(\n    config: InterpolationConfigType<OutputT>,\n  ): AnimatedInterpolation<OutputT> {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#animate\n   */\n  animate(animation: Animation, callback: ?EndCallback): void {\n    let handle = null;\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n    const previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(\n      this._value,\n      value => {\n        // Natively driven animations will never call into that callback, therefore we can always\n        // pass flush = true to allow the updated value to propagate to native with setNativeProps\n        this._updateValue(value, true /* flush */);\n      },\n      result => {\n        this._animation = null;\n        if (handle !== null) {\n          InteractionManager.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      },\n      previousAnimation,\n      this,\n    );\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  stopTracking(): void {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  track(tracking: AnimatedTracking): void {\n    this.stopTracking();\n    this._tracking = tracking;\n    // Make sure that the tracking animation starts executing\n    this._tracking && this._tracking.update();\n  }\n\n  _updateValue(value: number, flush: boolean): void {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n    if (flush) {\n      _flush(this);\n    }\n    super.__callListeners(this.__getValue());\n  }\n\n  __getNativeConfig(): Object {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}