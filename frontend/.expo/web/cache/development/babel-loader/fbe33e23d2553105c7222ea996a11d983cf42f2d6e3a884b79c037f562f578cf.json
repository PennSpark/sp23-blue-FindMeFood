{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Styles from \"./Styles.js\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState, useEffect } from 'react';\nimport Ionicons from '@expo/vector-icons/Ionicons.js';\nimport MapView, { Marker } from 'react-native-maps';\nimport { requestForegroundPermissionsAsync, watchPositionAsync } from 'expo-location';\nimport * as Location from 'expo-location';\nimport { getFormData } from \"./api.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home() {\n  var navigation = useNavigation();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    region = _useState2[0],\n    setRegion = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    location = _useState4[0],\n    setLocation = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    foodTrucks = _useState6[0],\n    setFoodTrucks = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    data = _useState8[0],\n    setData = _useState8[1];\n  var fetchDataFoodTruck = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield getFormData('/get-foodtruck/');\n      if (response && Array.isArray(response)) {\n        setData(response);\n      }\n    });\n    return function fetchDataFoodTruck() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchDataFoodTruck();\n    _asyncToGenerator(function* () {\n      var _yield$requestForegro = yield requestForegroundPermissionsAsync(),\n        granted = _yield$requestForegro.granted;\n      if (granted) {\n        var _location$coords, _location$coords2;\n        var _location = yield watchPositionAsync({\n          accuracy: Location.Accuracy.BestForNavigation,\n          timeInterval: 1000,\n          distanceInterval: 10\n        }, function (location) {\n          setLocation(location);\n        });\n        setRegion({\n          latitude: (_location$coords = _location.coords) == null ? void 0 : _location$coords.latitude,\n          longitude: (_location$coords2 = _location.coords) == null ? void 0 : _location$coords2.longitude,\n          latitudeDelta: 0.5,\n          longitudeDelta: 0.5\n        });\n      }\n    })();\n    var foodTrucksData = data.map(function (foodTruck) {\n      return {\n        id: +foodTruck.name,\n        name: foodTruck.name,\n        latitude: foodTruck.lat,\n        longitude: foodTruck.lon\n      };\n    });\n    setFoodTrucks(foodTrucksData);\n  }, []);\n  return _jsxs(View, {\n    position: \"absolute\",\n    height: \"80%\",\n    width: \"90%\",\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        return navigation.navigate('Profile', {\n          name: 'Jane'\n        });\n      },\n      children: _jsx(Ionicons, {\n        style: Styles.side_icon,\n        name: \"person-circle-outline\"\n      })\n    }), _jsx(Text, {\n      style: Styles.text,\n      children: \"HOME PAGE COMPONENT\"\n    }), region && location && location.coords && _jsxs(MapView, {\n      style: Styles.map,\n      initialRegion: region,\n      showsUserLocation: true,\n      followsUserLocation: true,\n      children: [_jsx(Marker, {\n        coordinate: location.coords\n      }), foodTrucks.map(function (foodTruck) {\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: foodTruck.latitude,\n            longitude: foodTruck.longitude\n          },\n          title: foodTruck.name\n        }, foodTruck.id);\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["Styles","useNavigation","React","useState","useEffect","Ionicons","MapView","Marker","requestForegroundPermissionsAsync","watchPositionAsync","Location","getFormData","Home","navigation","region","setRegion","location","setLocation","foodTrucks","setFoodTrucks","data","setData","fetchDataFoodTruck","response","Array","isArray","granted","accuracy","Accuracy","BestForNavigation","timeInterval","distanceInterval","latitude","coords","longitude","latitudeDelta","longitudeDelta","foodTrucksData","map","foodTruck","id","name","lat","lon","navigate","side_icon","text"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/Components/Home.js"],"sourcesContent":["import { View, Text, Pressable } from 'react-native';\nimport Styles from './Styles.js';\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState, useEffect } from 'react';\n\nimport Ionicons from '@expo/vector-icons/Ionicons.js';  \n\nimport MapView, { Marker } from 'react-native-maps';\nimport { requestForegroundPermissionsAsync, watchPositionAsync } from 'expo-location';\nimport * as Location from 'expo-location';\n\nimport { getFormData } from './api.js';\n\nexport default function Home() {\n    const navigation = useNavigation();\n\n    const [region, setRegion] = useState(null);\n    const [location, setLocation] = useState(null);\n\n    const [foodTrucks, setFoodTrucks] = useState([]);\n\n    const [data, setData] = useState([]);\n\n    const fetchDataFoodTruck = async () => {\n      const response = await getFormData('/get-foodtruck/');\n      if (response && Array.isArray(response)) {\n        setData(response);\n      }\n    };\n\n    useEffect(() => {\n      fetchDataFoodTruck();\n\n      (async () => {\n        const { granted } = await requestForegroundPermissionsAsync();\n  \n        if (granted) {\n          const location = await watchPositionAsync(\n            {\n              accuracy: Location.Accuracy.BestForNavigation,\n              timeInterval: 1000,\n              distanceInterval: 10\n            },\n            (location) => {\n              setLocation(location);\n            }\n          );\n          setRegion({\n            latitude: location.coords?.latitude,\n            longitude: location.coords?.longitude,\n            latitudeDelta: 0.5,\n            longitudeDelta: 0.5\n          });\n        }\n      })();\n\n      // FOR SOME REASON THE FOODTRUCKSDATA IS BLANK\n      const foodTrucksData = data.map(foodTruck => ({\n        id: +foodTruck.name,\n        name: foodTruck.name,\n        latitude: foodTruck.lat,\n        longitude: foodTruck.lon,\n      }));\n      setFoodTrucks(foodTrucksData);\n\n\n      /* \n      \n      ISSUE: MARKERS ARE NOT SHOWING ON MAP\n\n      const foodTrucksData = [\n        { id: 1, name: \"Lyn's\", latitude: 39.950350, longitude: -75.196970 },\n      ];\n      */\n\n    }, []);\n\n    return (\n      <View position='absolute' height='80%' width='90%'>\n\n        <Pressable onPress={() =>\n                navigation.navigate('Profile', {name: 'Jane'})\n          }>\n                <Ionicons style={Styles.side_icon} name=\"person-circle-outline\" />\n        </Pressable>        \n          \n        <Text style={Styles.text}>HOME PAGE COMPONENT</Text>\n\n        {region && location && location.coords && (\n        <MapView style={Styles.map}\n          initialRegion={region}\n          showsUserLocation={true}\n          followsUserLocation={true}\n        >\n          <Marker coordinate={location.coords} />\n          {foodTrucks.map(foodTruck => (\n            <Marker\n              key={foodTruck.id}\n              coordinate={{ latitude: foodTruck.latitude, longitude: foodTruck.longitude }}\n              title={foodTruck.name}\n            />\n          ))}\n        </MapView>\n        )}\n\n      </View>\n    );\n    \n    \n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}