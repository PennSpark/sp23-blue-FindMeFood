{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport SoundManager from \"../Components/Sound/SoundManager\";\nimport ReactNativeFeatureFlags from \"../ReactNative/ReactNativeFeatureFlags\";\nimport UIManager from \"../ReactNative/UIManager\";\nimport { normalizeRect } from \"../StyleSheet/Rect\";\nimport Platform from \"../Utilities/Platform\";\nimport { isHoverEnabled } from \"./HoverState\";\nimport PressabilityPerformanceEventEmitter from \"./PressabilityPerformanceEventEmitter.js\";\nimport invariant from 'invariant';\nimport * as React from 'react';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'ERROR',\n    RESPONDER_TERMINATED: 'ERROR',\n    ENTER_PRESS_RECT: 'ERROR',\n    LEAVE_PRESS_RECT: 'ERROR',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_IN',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_OUT',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR'\n  },\n  ERROR: {\n    DELAY: 'NOT_RESPONDER',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'NOT_RESPONDER',\n    LEAVE_PRESS_RECT: 'NOT_RESPONDER',\n    LONG_PRESS_DETECTED: 'NOT_RESPONDER'\n  }\n});\nvar isActiveSignal = function isActiveSignal(signal) {\n  return signal === 'RESPONDER_ACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n};\nvar isActivationSignal = function isActivationSignal(signal) {\n  return signal === 'RESPONDER_ACTIVE_PRESS_OUT' || signal === 'RESPONDER_ACTIVE_PRESS_IN';\n};\nvar isPressInSignal = function isPressInSignal(signal) {\n  return signal === 'RESPONDER_INACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_PRESS_IN' || signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n};\nvar isTerminalSignal = function isTerminalSignal(signal) {\n  return signal === 'RESPONDER_TERMINATED' || signal === 'RESPONDER_RELEASE';\n};\nvar DEFAULT_LONG_PRESS_DELAY_MS = 500;\nvar DEFAULT_PRESS_RECT_OFFSETS = {\n  bottom: 30,\n  left: 20,\n  right: 20,\n  top: 20\n};\nvar DEFAULT_MIN_PRESS_DURATION = 130;\nvar Pressability = function () {\n  function Pressability(config) {\n    var _this = this;\n    _classCallCheck(this, Pressability);\n    this._eventHandlers = null;\n    this._hoverInDelayTimeout = null;\n    this._hoverOutDelayTimeout = null;\n    this._isHovered = false;\n    this._longPressDelayTimeout = null;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._responderID = null;\n    this._responderRegion = null;\n    this._touchState = 'NOT_RESPONDER';\n    this._measureCallback = function (left, top, width, height, pageX, pageY) {\n      if (!left && !top && !width && !height && !pageX && !pageY) {\n        return;\n      }\n      _this._responderRegion = {\n        bottom: pageY + height,\n        left: pageX,\n        right: pageX + width,\n        top: pageY\n      };\n    };\n    this.configure(config);\n  }\n  _createClass(Pressability, [{\n    key: \"configure\",\n    value: function configure(config) {\n      this._config = config;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._cancelHoverInDelayTimeout();\n      this._cancelHoverOutDelayTimeout();\n      this._cancelLongPressDelayTimeout();\n      this._cancelPressDelayTimeout();\n      this._cancelPressOutDelayTimeout();\n      this._config = Object.freeze({});\n    }\n  }, {\n    key: \"getEventHandlers\",\n    value: function getEventHandlers() {\n      if (this._eventHandlers == null) {\n        this._eventHandlers = this._createEventHandlers();\n      }\n      return this._eventHandlers;\n    }\n  }, {\n    key: \"_createEventHandlers\",\n    value: function _createEventHandlers() {\n      var _this2 = this;\n      var focusEventHandlers = {\n        onBlur: function onBlur(event) {\n          var onBlur = _this2._config.onBlur;\n          if (onBlur != null) {\n            onBlur(event);\n          }\n        },\n        onFocus: function onFocus(event) {\n          var onFocus = _this2._config.onFocus;\n          if (onFocus != null) {\n            onFocus(event);\n          }\n        }\n      };\n      var responderEventHandlers = {\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          var disabled = _this2._config.disabled;\n          if (disabled == null) {\n            var onStartShouldSetResponder_DEPRECATED = _this2._config.onStartShouldSetResponder_DEPRECATED;\n            return onStartShouldSetResponder_DEPRECATED == null ? true : onStartShouldSetResponder_DEPRECATED();\n          }\n          return !disabled;\n        },\n        onResponderGrant: function onResponderGrant(event) {\n          event.persist();\n          _this2._cancelPressOutDelayTimeout();\n          _this2._responderID = event.currentTarget;\n          _this2._touchState = 'NOT_RESPONDER';\n          _this2._receiveSignal('RESPONDER_GRANT', event);\n          var delayPressIn = normalizeDelay(_this2._config.delayPressIn);\n          if (delayPressIn > 0) {\n            _this2._pressDelayTimeout = setTimeout(function () {\n              _this2._receiveSignal('DELAY', event);\n            }, delayPressIn);\n          } else {\n            _this2._receiveSignal('DELAY', event);\n          }\n          var delayLongPress = normalizeDelay(_this2._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS - delayPressIn);\n          _this2._longPressDelayTimeout = setTimeout(function () {\n            _this2._handleLongPress(event);\n          }, delayLongPress + delayPressIn);\n        },\n        onResponderMove: function onResponderMove(event) {\n          var onPressMove = _this2._config.onPressMove;\n          if (onPressMove != null) {\n            onPressMove(event);\n          }\n          var responderRegion = _this2._responderRegion;\n          if (responderRegion == null) {\n            return;\n          }\n          var touch = getTouchFromPressEvent(event);\n          if (touch == null) {\n            _this2._cancelLongPressDelayTimeout();\n            _this2._receiveSignal('LEAVE_PRESS_RECT', event);\n            return;\n          }\n          if (_this2._touchActivatePosition != null) {\n            var deltaX = _this2._touchActivatePosition.pageX - touch.pageX;\n            var deltaY = _this2._touchActivatePosition.pageY - touch.pageY;\n            if (Math.hypot(deltaX, deltaY) > 10) {\n              _this2._cancelLongPressDelayTimeout();\n            }\n          }\n          if (_this2._isTouchWithinResponderRegion(touch, responderRegion)) {\n            _this2._receiveSignal('ENTER_PRESS_RECT', event);\n          } else {\n            _this2._cancelLongPressDelayTimeout();\n            _this2._receiveSignal('LEAVE_PRESS_RECT', event);\n          }\n        },\n        onResponderRelease: function onResponderRelease(event) {\n          _this2._receiveSignal('RESPONDER_RELEASE', event);\n        },\n        onResponderTerminate: function onResponderTerminate(event) {\n          _this2._receiveSignal('RESPONDER_TERMINATED', event);\n        },\n        onResponderTerminationRequest: function onResponderTerminationRequest() {\n          var cancelable = _this2._config.cancelable;\n          if (cancelable == null) {\n            var onResponderTerminationRequest_DEPRECATED = _this2._config.onResponderTerminationRequest_DEPRECATED;\n            return onResponderTerminationRequest_DEPRECATED == null ? true : onResponderTerminationRequest_DEPRECATED();\n          }\n          return cancelable;\n        },\n        onClick: function onClick(event) {\n          var _this2$_config = _this2._config,\n            onPress = _this2$_config.onPress,\n            disabled = _this2$_config.disabled;\n          if (onPress != null && disabled !== true) {\n            onPress(event);\n          }\n        }\n      };\n      if (process.env.NODE_ENV === 'test') {\n        responderEventHandlers.onStartShouldSetResponder.testOnly_pressabilityConfig = function () {\n          return _this2._config;\n        };\n      }\n      if (ReactNativeFeatureFlags.shouldPressibilityUseW3CPointerEventsForHover()) {\n        var hoverPointerEvents = {\n          onPointerEnter: undefined,\n          onPointerLeave: undefined\n        };\n        var _this$_config = this._config,\n          onHoverIn = _this$_config.onHoverIn,\n          onHoverOut = _this$_config.onHoverOut;\n        if (onHoverIn != null) {\n          hoverPointerEvents.onPointerEnter = function (event) {\n            _this2._isHovered = true;\n            _this2._cancelHoverOutDelayTimeout();\n            if (onHoverIn != null) {\n              var delayHoverIn = normalizeDelay(_this2._config.delayHoverIn);\n              if (delayHoverIn > 0) {\n                event.persist();\n                _this2._hoverInDelayTimeout = setTimeout(function () {\n                  onHoverIn(convertPointerEventToMouseEvent(event));\n                }, delayHoverIn);\n              } else {\n                onHoverIn(convertPointerEventToMouseEvent(event));\n              }\n            }\n          };\n        }\n        if (onHoverOut != null) {\n          hoverPointerEvents.onPointerLeave = function (event) {\n            if (_this2._isHovered) {\n              _this2._isHovered = false;\n              _this2._cancelHoverInDelayTimeout();\n              if (onHoverOut != null) {\n                var delayHoverOut = normalizeDelay(_this2._config.delayHoverOut);\n                if (delayHoverOut > 0) {\n                  event.persist();\n                  _this2._hoverOutDelayTimeout = setTimeout(function () {\n                    onHoverOut(convertPointerEventToMouseEvent(event));\n                  }, delayHoverOut);\n                } else {\n                  onHoverOut(convertPointerEventToMouseEvent(event));\n                }\n              }\n            }\n          };\n        }\n        return _objectSpread(_objectSpread(_objectSpread({}, focusEventHandlers), responderEventHandlers), hoverPointerEvents);\n      } else {\n        var mouseEventHandlers = Platform.OS === 'ios' || Platform.OS === 'android' ? null : {\n          onMouseEnter: function onMouseEnter(event) {\n            if (isHoverEnabled()) {\n              _this2._isHovered = true;\n              _this2._cancelHoverOutDelayTimeout();\n              var _onHoverIn = _this2._config.onHoverIn;\n              if (_onHoverIn != null) {\n                var delayHoverIn = normalizeDelay(_this2._config.delayHoverIn);\n                if (delayHoverIn > 0) {\n                  event.persist();\n                  _this2._hoverInDelayTimeout = setTimeout(function () {\n                    _onHoverIn(event);\n                  }, delayHoverIn);\n                } else {\n                  _onHoverIn(event);\n                }\n              }\n            }\n          },\n          onMouseLeave: function onMouseLeave(event) {\n            if (_this2._isHovered) {\n              _this2._isHovered = false;\n              _this2._cancelHoverInDelayTimeout();\n              var _onHoverOut = _this2._config.onHoverOut;\n              if (_onHoverOut != null) {\n                var delayHoverOut = normalizeDelay(_this2._config.delayHoverOut);\n                if (delayHoverOut > 0) {\n                  event.persist();\n                  _this2._hoverInDelayTimeout = setTimeout(function () {\n                    _onHoverOut(event);\n                  }, delayHoverOut);\n                } else {\n                  _onHoverOut(event);\n                }\n              }\n            }\n          }\n        };\n        return _objectSpread(_objectSpread(_objectSpread({}, focusEventHandlers), responderEventHandlers), mouseEventHandlers);\n      }\n    }\n  }, {\n    key: \"_receiveSignal\",\n    value: function _receiveSignal(signal, event) {\n      var _Transitions$prevStat;\n      if (event.nativeEvent.timestamp != null) {\n        PressabilityPerformanceEventEmitter.emitEvent(function () {\n          return {\n            signal: signal,\n            nativeTimestamp: event.nativeEvent.timestamp\n          };\n        });\n      }\n      var prevState = this._touchState;\n      var nextState = (_Transitions$prevStat = Transitions[prevState]) == null ? void 0 : _Transitions$prevStat[signal];\n      if (this._responderID == null && signal === 'RESPONDER_RELEASE') {\n        return;\n      }\n      invariant(nextState != null && nextState !== 'ERROR', 'Pressability: Invalid signal `%s` for state `%s` on responder: %s', signal, prevState, typeof this._responderID === 'number' ? this._responderID : '<<host component>>');\n      if (prevState !== nextState) {\n        this._performTransitionSideEffects(prevState, nextState, signal, event);\n        this._touchState = nextState;\n      }\n    }\n  }, {\n    key: \"_performTransitionSideEffects\",\n    value: function _performTransitionSideEffects(prevState, nextState, signal, event) {\n      if (isTerminalSignal(signal)) {\n        this._touchActivatePosition = null;\n        this._cancelLongPressDelayTimeout();\n      }\n      var isInitialTransition = prevState === 'NOT_RESPONDER' && nextState === 'RESPONDER_INACTIVE_PRESS_IN';\n      var isActivationTransition = !isActivationSignal(prevState) && isActivationSignal(nextState);\n      if (isInitialTransition || isActivationTransition) {\n        this._measureResponderRegion();\n      }\n      if (isPressInSignal(prevState) && signal === 'LONG_PRESS_DETECTED') {\n        var onLongPress = this._config.onLongPress;\n        if (onLongPress != null) {\n          onLongPress(event);\n        }\n      }\n      var isPrevActive = isActiveSignal(prevState);\n      var isNextActive = isActiveSignal(nextState);\n      if (!isPrevActive && isNextActive) {\n        this._activate(event);\n      } else if (isPrevActive && !isNextActive) {\n        this._deactivate(event);\n      }\n      if (isPressInSignal(prevState) && signal === 'RESPONDER_RELEASE') {\n        if (!isNextActive && !isPrevActive) {\n          this._activate(event);\n          this._deactivate(event);\n        }\n        var _this$_config2 = this._config,\n          _onLongPress = _this$_config2.onLongPress,\n          onPress = _this$_config2.onPress,\n          android_disableSound = _this$_config2.android_disableSound;\n        if (onPress != null) {\n          var isPressCanceledByLongPress = _onLongPress != null && prevState === 'RESPONDER_ACTIVE_LONG_PRESS_IN' && this._shouldLongPressCancelPress();\n          if (!isPressCanceledByLongPress) {\n            if (Platform.OS === 'android' && android_disableSound !== true) {\n              SoundManager.playTouchSound();\n            }\n            onPress(event);\n          }\n        }\n      }\n      this._cancelPressDelayTimeout();\n    }\n  }, {\n    key: \"_activate\",\n    value: function _activate(event) {\n      var onPressIn = this._config.onPressIn;\n      var _getTouchFromPressEve = getTouchFromPressEvent(event),\n        pageX = _getTouchFromPressEve.pageX,\n        pageY = _getTouchFromPressEve.pageY;\n      this._touchActivatePosition = {\n        pageX: pageX,\n        pageY: pageY\n      };\n      this._touchActivateTime = Date.now();\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    }\n  }, {\n    key: \"_deactivate\",\n    value: function _deactivate(event) {\n      var onPressOut = this._config.onPressOut;\n      if (onPressOut != null) {\n        var _this$_touchActivateT;\n        var minPressDuration = normalizeDelay(this._config.minPressDuration, 0, DEFAULT_MIN_PRESS_DURATION);\n        var pressDuration = Date.now() - ((_this$_touchActivateT = this._touchActivateTime) != null ? _this$_touchActivateT : 0);\n        var delayPressOut = Math.max(minPressDuration - pressDuration, normalizeDelay(this._config.delayPressOut));\n        if (delayPressOut > 0) {\n          event.persist();\n          this._pressOutDelayTimeout = setTimeout(function () {\n            onPressOut(event);\n          }, delayPressOut);\n        } else {\n          onPressOut(event);\n        }\n      }\n      this._touchActivateTime = null;\n    }\n  }, {\n    key: \"_measureResponderRegion\",\n    value: function _measureResponderRegion() {\n      if (this._responderID == null) {\n        return;\n      }\n      if (typeof this._responderID === 'number') {\n        UIManager.measure(this._responderID, this._measureCallback);\n      } else {\n        this._responderID.measure(this._measureCallback);\n      }\n    }\n  }, {\n    key: \"_isTouchWithinResponderRegion\",\n    value: function _isTouchWithinResponderRegion(touch, responderRegion) {\n      var _pressRectOffset$bott, _pressRectOffset$left, _pressRectOffset$righ, _pressRectOffset$top;\n      var hitSlop = normalizeRect(this._config.hitSlop);\n      var pressRectOffset = normalizeRect(this._config.pressRectOffset);\n      var regionBottom = responderRegion.bottom;\n      var regionLeft = responderRegion.left;\n      var regionRight = responderRegion.right;\n      var regionTop = responderRegion.top;\n      if (hitSlop != null) {\n        if (hitSlop.bottom != null) {\n          regionBottom += hitSlop.bottom;\n        }\n        if (hitSlop.left != null) {\n          regionLeft -= hitSlop.left;\n        }\n        if (hitSlop.right != null) {\n          regionRight += hitSlop.right;\n        }\n        if (hitSlop.top != null) {\n          regionTop -= hitSlop.top;\n        }\n      }\n      regionBottom += (_pressRectOffset$bott = pressRectOffset == null ? void 0 : pressRectOffset.bottom) != null ? _pressRectOffset$bott : DEFAULT_PRESS_RECT_OFFSETS.bottom;\n      regionLeft -= (_pressRectOffset$left = pressRectOffset == null ? void 0 : pressRectOffset.left) != null ? _pressRectOffset$left : DEFAULT_PRESS_RECT_OFFSETS.left;\n      regionRight += (_pressRectOffset$righ = pressRectOffset == null ? void 0 : pressRectOffset.right) != null ? _pressRectOffset$righ : DEFAULT_PRESS_RECT_OFFSETS.right;\n      regionTop -= (_pressRectOffset$top = pressRectOffset == null ? void 0 : pressRectOffset.top) != null ? _pressRectOffset$top : DEFAULT_PRESS_RECT_OFFSETS.top;\n      return touch.pageX > regionLeft && touch.pageX < regionRight && touch.pageY > regionTop && touch.pageY < regionBottom;\n    }\n  }, {\n    key: \"_handleLongPress\",\n    value: function _handleLongPress(event) {\n      if (this._touchState === 'RESPONDER_ACTIVE_PRESS_IN' || this._touchState === 'RESPONDER_ACTIVE_LONG_PRESS_IN') {\n        this._receiveSignal('LONG_PRESS_DETECTED', event);\n      }\n    }\n  }, {\n    key: \"_shouldLongPressCancelPress\",\n    value: function _shouldLongPressCancelPress() {\n      return this._config.onLongPressShouldCancelPress_DEPRECATED == null || this._config.onLongPressShouldCancelPress_DEPRECATED();\n    }\n  }, {\n    key: \"_cancelHoverInDelayTimeout\",\n    value: function _cancelHoverInDelayTimeout() {\n      if (this._hoverInDelayTimeout != null) {\n        clearTimeout(this._hoverInDelayTimeout);\n        this._hoverInDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelHoverOutDelayTimeout\",\n    value: function _cancelHoverOutDelayTimeout() {\n      if (this._hoverOutDelayTimeout != null) {\n        clearTimeout(this._hoverOutDelayTimeout);\n        this._hoverOutDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelLongPressDelayTimeout\",\n    value: function _cancelLongPressDelayTimeout() {\n      if (this._longPressDelayTimeout != null) {\n        clearTimeout(this._longPressDelayTimeout);\n        this._longPressDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelPressDelayTimeout\",\n    value: function _cancelPressDelayTimeout() {\n      if (this._pressDelayTimeout != null) {\n        clearTimeout(this._pressDelayTimeout);\n        this._pressDelayTimeout = null;\n      }\n    }\n  }, {\n    key: \"_cancelPressOutDelayTimeout\",\n    value: function _cancelPressOutDelayTimeout() {\n      if (this._pressOutDelayTimeout != null) {\n        clearTimeout(this._pressOutDelayTimeout);\n        this._pressOutDelayTimeout = null;\n      }\n    }\n  }]);\n  return Pressability;\n}();\nexport { Pressability as default };\nfunction normalizeDelay(delay) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return Math.max(min, delay != null ? delay : fallback);\n}\nvar getTouchFromPressEvent = function getTouchFromPressEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n    changedTouches = _event$nativeEvent.changedTouches,\n    touches = _event$nativeEvent.touches;\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n};\nfunction convertPointerEventToMouseEvent(input) {\n  var _input$nativeEvent = input.nativeEvent,\n    clientX = _input$nativeEvent.clientX,\n    clientY = _input$nativeEvent.clientY;\n  return _objectSpread(_objectSpread({}, input), {}, {\n    nativeEvent: {\n      clientX: clientX,\n      clientY: clientY,\n      pageX: clientX,\n      pageY: clientY,\n      timestamp: input.timeStamp\n    }\n  });\n}","map":{"version":3,"names":["SoundManager","ReactNativeFeatureFlags","UIManager","normalizeRect","Platform","isHoverEnabled","PressabilityPerformanceEventEmitter","invariant","React","Transitions","Object","freeze","NOT_RESPONDER","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","ENTER_PRESS_RECT","LEAVE_PRESS_RECT","LONG_PRESS_DETECTED","RESPONDER_INACTIVE_PRESS_IN","RESPONDER_INACTIVE_PRESS_OUT","RESPONDER_ACTIVE_PRESS_IN","RESPONDER_ACTIVE_PRESS_OUT","RESPONDER_ACTIVE_LONG_PRESS_IN","RESPONDER_ACTIVE_LONG_PRESS_OUT","ERROR","isActiveSignal","signal","isActivationSignal","isPressInSignal","isTerminalSignal","DEFAULT_LONG_PRESS_DELAY_MS","DEFAULT_PRESS_RECT_OFFSETS","bottom","left","right","top","DEFAULT_MIN_PRESS_DURATION","Pressability","config","_eventHandlers","_hoverInDelayTimeout","_hoverOutDelayTimeout","_isHovered","_longPressDelayTimeout","_pressDelayTimeout","_pressOutDelayTimeout","_responderID","_responderRegion","_touchState","_measureCallback","width","height","pageX","pageY","configure","_config","_cancelHoverInDelayTimeout","_cancelHoverOutDelayTimeout","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","_createEventHandlers","focusEventHandlers","onBlur","event","onFocus","responderEventHandlers","onStartShouldSetResponder","disabled","onStartShouldSetResponder_DEPRECATED","onResponderGrant","persist","currentTarget","_receiveSignal","delayPressIn","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","onResponderMove","onPressMove","responderRegion","touch","getTouchFromPressEvent","_touchActivatePosition","deltaX","deltaY","Math","hypot","_isTouchWithinResponderRegion","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","cancelable","onResponderTerminationRequest_DEPRECATED","onClick","onPress","process","env","NODE_ENV","testOnly_pressabilityConfig","shouldPressibilityUseW3CPointerEventsForHover","hoverPointerEvents","onPointerEnter","undefined","onPointerLeave","onHoverIn","onHoverOut","delayHoverIn","convertPointerEventToMouseEvent","delayHoverOut","mouseEventHandlers","OS","onMouseEnter","onMouseLeave","nativeEvent","timestamp","emitEvent","nativeTimestamp","prevState","nextState","_performTransitionSideEffects","isInitialTransition","isActivationTransition","_measureResponderRegion","onLongPress","isPrevActive","isNextActive","_activate","_deactivate","android_disableSound","isPressCanceledByLongPress","_shouldLongPressCancelPress","playTouchSound","onPressIn","_touchActivateTime","Date","now","onPressOut","minPressDuration","pressDuration","delayPressOut","max","measure","hitSlop","pressRectOffset","regionBottom","regionLeft","regionRight","regionTop","onLongPressShouldCancelPress_DEPRECATED","clearTimeout","delay","min","fallback","changedTouches","touches","length","input","clientX","clientY","timeStamp"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/Pressability/Pressability.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {\n  BlurEvent,\n  FocusEvent,\n  MouseEvent,\n  PressEvent,\n} from '../Types/CoreEventTypes';\n\nimport SoundManager from '../Components/Sound/SoundManager';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport UIManager from '../ReactNative/UIManager';\nimport {type RectOrSize, normalizeRect} from '../StyleSheet/Rect';\nimport {type PointerEvent} from '../Types/CoreEventTypes';\nimport Platform from '../Utilities/Platform';\nimport {isHoverEnabled} from './HoverState';\nimport PressabilityPerformanceEventEmitter from './PressabilityPerformanceEventEmitter.js';\nimport {type PressabilityTouchSignal as TouchSignal} from './PressabilityTypes.js';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\nexport type PressabilityConfig = $ReadOnly<{|\n  /**\n   * Whether a press gesture can be interrupted by a parent gesture such as a\n   * scroll event. Defaults to true.\n   */\n  cancelable?: ?boolean,\n\n  /**\n   * Whether to disable initialization of the press gesture.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Amount to extend the `VisualRect` by to create `HitRect`.\n   */\n  hitSlop?: ?RectOrSize,\n\n  /**\n   * Amount to extend the `HitRect` by to create `PressRect`.\n   */\n  pressRectOffset?: ?RectOrSize,\n\n  /**\n   * Whether to disable the systemm sound when `onPress` fires on Android.\n   **/\n  android_disableSound?: ?boolean,\n\n  /**\n   * Duration to wait after hover in before calling `onHoverIn`.\n   */\n  delayHoverIn?: ?number,\n\n  /**\n   * Duration to wait after hover out before calling `onHoverOut`.\n   */\n  delayHoverOut?: ?number,\n\n  /**\n   * Duration (in addition to `delayPressIn`) after which a press gesture is\n   * considered a long press gesture. Defaults to 500 (milliseconds).\n   */\n  delayLongPress?: ?number,\n\n  /**\n   * Duration to wait after press down before calling `onPressIn`.\n   */\n  delayPressIn?: ?number,\n\n  /**\n   * Duration to wait after letting up before calling `onPressOut`.\n   */\n  delayPressOut?: ?number,\n\n  /**\n   * Minimum duration to wait between calling `onPressIn` and `onPressOut`.\n   */\n  minPressDuration?: ?number,\n\n  /**\n   * Called after the element loses focus.\n   */\n  onBlur?: ?(event: BlurEvent) => mixed,\n\n  /**\n   * Called after the element is focused.\n   */\n  onFocus?: ?(event: FocusEvent) => mixed,\n\n  /**\n   * Called when the hover is activated to provide visual feedback.\n   */\n  onHoverIn?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when the hover is deactivated to undo visual feedback.\n   */\n  onHoverOut?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when a long press gesture has been triggered.\n   */\n  onLongPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a press gestute has been triggered.\n   */\n  onPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press is activated to provide visual feedback.\n   */\n  onPressIn?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press location moves. (This should rarely be used.)\n   */\n  onPressMove?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when the press is deactivated to undo visual feedback.\n   */\n  onPressOut?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Returns whether a long press gesture should cancel the press gesture.\n   * Defaults to true.\n   */\n  onLongPressShouldCancelPress_DEPRECATED?: ?() => boolean,\n\n  /**\n   * If `cancelable` is set, this will be ignored.\n   *\n   * Returns whether to yield to a lock termination request (e.g. if a native\n   * scroll gesture attempts to steal the responder lock).\n   */\n  onResponderTerminationRequest_DEPRECATED?: ?() => boolean,\n\n  /**\n   * If `disabled` is set, this will be ignored.\n   *\n   * Returns whether to start a press gesture.\n   *\n   * @deprecated\n   */\n  onStartShouldSetResponder_DEPRECATED?: ?() => boolean,\n|}>;\n\nexport type EventHandlers = $ReadOnly<{|\n  onBlur: (event: BlurEvent) => void,\n  onClick: (event: PressEvent) => void,\n  onFocus: (event: FocusEvent) => void,\n  onMouseEnter?: (event: MouseEvent) => void,\n  onMouseLeave?: (event: MouseEvent) => void,\n  onPointerEnter?: (event: PointerEvent) => void,\n  onPointerLeave?: (event: PointerEvent) => void,\n  onResponderGrant: (event: PressEvent) => void,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: () => boolean,\n  onStartShouldSetResponder: () => boolean,\n|}>;\n\ntype TouchState =\n  | 'NOT_RESPONDER'\n  | 'RESPONDER_INACTIVE_PRESS_IN'\n  | 'RESPONDER_INACTIVE_PRESS_OUT'\n  | 'RESPONDER_ACTIVE_PRESS_IN'\n  | 'RESPONDER_ACTIVE_PRESS_OUT'\n  | 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n  | 'RESPONDER_ACTIVE_LONG_PRESS_OUT'\n  | 'ERROR';\n\nconst Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'ERROR',\n    RESPONDER_TERMINATED: 'ERROR',\n    ENTER_PRESS_RECT: 'ERROR',\n    LEAVE_PRESS_RECT: 'ERROR',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_IN',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_OUT',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  ERROR: {\n    DELAY: 'NOT_RESPONDER',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'NOT_RESPONDER',\n    LEAVE_PRESS_RECT: 'NOT_RESPONDER',\n    LONG_PRESS_DETECTED: 'NOT_RESPONDER',\n  },\n});\n\nconst isActiveSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isActivationSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_OUT' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN';\n\nconst isPressInSignal = (signal: TouchState) =>\n  signal === 'RESPONDER_INACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isTerminalSignal = (signal: TouchSignal) =>\n  signal === 'RESPONDER_TERMINATED' || signal === 'RESPONDER_RELEASE';\n\nconst DEFAULT_LONG_PRESS_DELAY_MS = 500;\nconst DEFAULT_PRESS_RECT_OFFSETS = {\n  bottom: 30,\n  left: 20,\n  right: 20,\n  top: 20,\n};\nconst DEFAULT_MIN_PRESS_DURATION = 130;\n\n/**\n * Pressability implements press handling capabilities.\n *\n * =========================== Pressability Tutorial ===========================\n *\n * The `Pressability` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `Pressability`, do the following:\n *\n * 1. Instantiate `Pressability` and store it on your component's state.\n *\n *    state = {\n *      pressability: new Pressability({\n *        // ...\n *      }),\n *    };\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressability.getEventHandlers()} />\n *    );\n *\n * 3. Reset `Pressability` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressability.reset();\n *    }\n *\n * ==================== Pressability Implementation Details ====================\n *\n * `Pressability` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`, which\n *  │  │  ┌────────────┐  │  │   is expanded via the prop `hitSlop`.\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates for\n *  │  └──────────────────┘  │   as long as the press stays within `PressRect`.\n *  │       PressRect    o   │\n *  └────────────────────│───┘\n *          Out Region   └────── `PressRect`, which is expanded via the prop\n *                               `pressRectOffset`, allows presses to move\n *                               beyond `HitRect` while maintaining activation\n *                               and being eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_IN            ├────────▶ │ PRESS_IN          ├────────────▶ │ LONG_PRESS_IN     │\n * └─┬───────────────────┘          └─┬─────────────────┘              └─┬─────────────────┘\n *   │           ▲                    │           ▲                      │           ▲\n *   │LEAVE_     │                    │LEAVE_     │                      │LEAVE_     │\n *   │PRESS_RECT │ENTER_              │PRESS_RECT │ENTER_                │PRESS_RECT │ENTER_\n *   │           │PRESS_RECT          │           │PRESS_RECT            │           │PRESS_RECT\n *   ▼           │                    ▼           │                      ▼           │\n * ┌─────────────┴───────┐          ┌─────────────┴─────┐              ┌─────────────┴─────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │              │ RESPONDER_ACTIVE_ │\n * │ PRESS_OUT           ├────────▶ │ PRESS_OUT         │              │ LONG_PRESS_OUT    │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onPress` and `onLongPress` that occur when a\n * responder is release while in the \"press in\" states.\n */\nexport default class Pressability {\n  _config: PressabilityConfig;\n  _eventHandlers: ?EventHandlers = null;\n  _hoverInDelayTimeout: ?TimeoutID = null;\n  _hoverOutDelayTimeout: ?TimeoutID = null;\n  _isHovered: boolean = false;\n  _longPressDelayTimeout: ?TimeoutID = null;\n  _pressDelayTimeout: ?TimeoutID = null;\n  _pressOutDelayTimeout: ?TimeoutID = null;\n  _responderID: ?number | React.ElementRef<HostComponent<mixed>> = null;\n  _responderRegion: ?$ReadOnly<{|\n    bottom: number,\n    left: number,\n    right: number,\n    top: number,\n  |}> = null;\n  _touchActivatePosition: ?$ReadOnly<{|\n    pageX: number,\n    pageY: number,\n  |}>;\n  _touchActivateTime: ?number;\n  _touchState: TouchState = 'NOT_RESPONDER';\n\n  constructor(config: PressabilityConfig) {\n    this.configure(config);\n  }\n\n  configure(config: PressabilityConfig): void {\n    this._config = config;\n  }\n\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  reset(): void {\n    this._cancelHoverInDelayTimeout();\n    this._cancelHoverOutDelayTimeout();\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n\n    // Ensure that, if any async event handlers are fired after unmount\n    // due to a race, we don't call any configured callbacks.\n    this._config = Object.freeze({});\n  }\n\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  getEventHandlers(): EventHandlers {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  }\n\n  _createEventHandlers(): EventHandlers {\n    const focusEventHandlers = {\n      onBlur: (event: BlurEvent): void => {\n        const {onBlur} = this._config;\n        if (onBlur != null) {\n          onBlur(event);\n        }\n      },\n      onFocus: (event: FocusEvent): void => {\n        const {onFocus} = this._config;\n        if (onFocus != null) {\n          onFocus(event);\n        }\n      },\n    };\n\n    const responderEventHandlers = {\n      onStartShouldSetResponder: (): boolean => {\n        const {disabled} = this._config;\n        if (disabled == null) {\n          const {onStartShouldSetResponder_DEPRECATED} = this._config;\n          return onStartShouldSetResponder_DEPRECATED == null\n            ? true\n            : onStartShouldSetResponder_DEPRECATED();\n        }\n        return !disabled;\n      },\n\n      onResponderGrant: (event: PressEvent): void => {\n        event.persist();\n\n        this._cancelPressOutDelayTimeout();\n\n        this._responderID = event.currentTarget;\n        this._touchState = 'NOT_RESPONDER';\n        this._receiveSignal('RESPONDER_GRANT', event);\n\n        const delayPressIn = normalizeDelay(this._config.delayPressIn);\n        if (delayPressIn > 0) {\n          this._pressDelayTimeout = setTimeout(() => {\n            this._receiveSignal('DELAY', event);\n          }, delayPressIn);\n        } else {\n          this._receiveSignal('DELAY', event);\n        }\n\n        const delayLongPress = normalizeDelay(\n          this._config.delayLongPress,\n          10,\n          DEFAULT_LONG_PRESS_DELAY_MS - delayPressIn,\n        );\n        this._longPressDelayTimeout = setTimeout(() => {\n          this._handleLongPress(event);\n        }, delayLongPress + delayPressIn);\n      },\n\n      onResponderMove: (event: PressEvent): void => {\n        const {onPressMove} = this._config;\n        if (onPressMove != null) {\n          onPressMove(event);\n        }\n\n        // Region may not have finished being measured, yet.\n        const responderRegion = this._responderRegion;\n        if (responderRegion == null) {\n          return;\n        }\n\n        const touch = getTouchFromPressEvent(event);\n        if (touch == null) {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n          return;\n        }\n\n        if (this._touchActivatePosition != null) {\n          const deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          const deltaY = this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n\n        if (this._isTouchWithinResponderRegion(touch, responderRegion)) {\n          this._receiveSignal('ENTER_PRESS_RECT', event);\n        } else {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n        }\n      },\n\n      onResponderRelease: (event: PressEvent): void => {\n        this._receiveSignal('RESPONDER_RELEASE', event);\n      },\n\n      onResponderTerminate: (event: PressEvent): void => {\n        this._receiveSignal('RESPONDER_TERMINATED', event);\n      },\n\n      onResponderTerminationRequest: (): boolean => {\n        const {cancelable} = this._config;\n        if (cancelable == null) {\n          const {onResponderTerminationRequest_DEPRECATED} = this._config;\n          return onResponderTerminationRequest_DEPRECATED == null\n            ? true\n            : onResponderTerminationRequest_DEPRECATED();\n        }\n        return cancelable;\n      },\n\n      onClick: (event: PressEvent): void => {\n        const {onPress, disabled} = this._config;\n        if (onPress != null && disabled !== true) {\n          onPress(event);\n        }\n      },\n    };\n\n    if (process.env.NODE_ENV === 'test') {\n      // We are setting this in order to find this node in ReactNativeTestTools\n      // $FlowFixMe[prop-missing]\n      responderEventHandlers.onStartShouldSetResponder.testOnly_pressabilityConfig =\n        () => this._config;\n    }\n\n    if (\n      ReactNativeFeatureFlags.shouldPressibilityUseW3CPointerEventsForHover()\n    ) {\n      const hoverPointerEvents = {\n        onPointerEnter: undefined,\n        onPointerLeave: undefined,\n      };\n      const {onHoverIn, onHoverOut} = this._config;\n      if (onHoverIn != null) {\n        hoverPointerEvents.onPointerEnter = (event: PointerEvent) => {\n          this._isHovered = true;\n          this._cancelHoverOutDelayTimeout();\n          if (onHoverIn != null) {\n            const delayHoverIn = normalizeDelay(this._config.delayHoverIn);\n            if (delayHoverIn > 0) {\n              event.persist();\n              this._hoverInDelayTimeout = setTimeout(() => {\n                onHoverIn(convertPointerEventToMouseEvent(event));\n              }, delayHoverIn);\n            } else {\n              onHoverIn(convertPointerEventToMouseEvent(event));\n            }\n          }\n        };\n      }\n      if (onHoverOut != null) {\n        hoverPointerEvents.onPointerLeave = (event: PointerEvent) => {\n          if (this._isHovered) {\n            this._isHovered = false;\n            this._cancelHoverInDelayTimeout();\n            if (onHoverOut != null) {\n              const delayHoverOut = normalizeDelay(this._config.delayHoverOut);\n              if (delayHoverOut > 0) {\n                event.persist();\n                this._hoverOutDelayTimeout = setTimeout(() => {\n                  onHoverOut(convertPointerEventToMouseEvent(event));\n                }, delayHoverOut);\n              } else {\n                onHoverOut(convertPointerEventToMouseEvent(event));\n              }\n            }\n          }\n        };\n      }\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...hoverPointerEvents,\n      };\n    } else {\n      const mouseEventHandlers =\n        Platform.OS === 'ios' || Platform.OS === 'android'\n          ? null\n          : {\n              onMouseEnter: (event: MouseEvent): void => {\n                if (isHoverEnabled()) {\n                  this._isHovered = true;\n                  this._cancelHoverOutDelayTimeout();\n                  const {onHoverIn} = this._config;\n                  if (onHoverIn != null) {\n                    const delayHoverIn = normalizeDelay(\n                      this._config.delayHoverIn,\n                    );\n                    if (delayHoverIn > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverIn(event);\n                      }, delayHoverIn);\n                    } else {\n                      onHoverIn(event);\n                    }\n                  }\n                }\n              },\n\n              onMouseLeave: (event: MouseEvent): void => {\n                if (this._isHovered) {\n                  this._isHovered = false;\n                  this._cancelHoverInDelayTimeout();\n                  const {onHoverOut} = this._config;\n                  if (onHoverOut != null) {\n                    const delayHoverOut = normalizeDelay(\n                      this._config.delayHoverOut,\n                    );\n                    if (delayHoverOut > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverOut(event);\n                      }, delayHoverOut);\n                    } else {\n                      onHoverOut(event);\n                    }\n                  }\n                }\n              },\n            };\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...mouseEventHandlers,\n      };\n    }\n  }\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  _receiveSignal(signal: TouchSignal, event: PressEvent): void {\n    // Especially on iOS, not all events have timestamps associated.\n    // For telemetry purposes, this doesn't matter too much, as long as *some* do.\n    // Since the native timestamp is integral for logging telemetry, just skip\n    // events if they don't have a timestamp attached.\n    if (event.nativeEvent.timestamp != null) {\n      PressabilityPerformanceEventEmitter.emitEvent(() => {\n        return {\n          signal,\n          nativeTimestamp: event.nativeEvent.timestamp,\n        };\n      });\n    }\n\n    const prevState = this._touchState;\n    const nextState = Transitions[prevState]?.[signal];\n    if (this._responderID == null && signal === 'RESPONDER_RELEASE') {\n      return;\n    }\n    invariant(\n      nextState != null && nextState !== 'ERROR',\n      'Pressability: Invalid signal `%s` for state `%s` on responder: %s',\n      signal,\n      prevState,\n      typeof this._responderID === 'number'\n        ? this._responderID\n        : '<<host component>>',\n    );\n    if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  _performTransitionSideEffects(\n    prevState: TouchState,\n    nextState: TouchState,\n    signal: TouchSignal,\n    event: PressEvent,\n  ): void {\n    if (isTerminalSignal(signal)) {\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n\n    const isInitialTransition =\n      prevState === 'NOT_RESPONDER' &&\n      nextState === 'RESPONDER_INACTIVE_PRESS_IN';\n\n    const isActivationTransition =\n      !isActivationSignal(prevState) && isActivationSignal(nextState);\n\n    if (isInitialTransition || isActivationTransition) {\n      this._measureResponderRegion();\n    }\n\n    if (isPressInSignal(prevState) && signal === 'LONG_PRESS_DETECTED') {\n      const {onLongPress} = this._config;\n      if (onLongPress != null) {\n        onLongPress(event);\n      }\n    }\n\n    const isPrevActive = isActiveSignal(prevState);\n    const isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressInSignal(prevState) && signal === 'RESPONDER_RELEASE') {\n      // If we never activated (due to delays), activate and deactivate now.\n      if (!isNextActive && !isPrevActive) {\n        this._activate(event);\n        this._deactivate(event);\n      }\n      const {onLongPress, onPress, android_disableSound} = this._config;\n      if (onPress != null) {\n        const isPressCanceledByLongPress =\n          onLongPress != null &&\n          prevState === 'RESPONDER_ACTIVE_LONG_PRESS_IN' &&\n          this._shouldLongPressCancelPress();\n        if (!isPressCanceledByLongPress) {\n          if (Platform.OS === 'android' && android_disableSound !== true) {\n            SoundManager.playTouchSound();\n          }\n          onPress(event);\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  }\n\n  _activate(event: PressEvent): void {\n    const {onPressIn} = this._config;\n    const {pageX, pageY} = getTouchFromPressEvent(event);\n    this._touchActivatePosition = {pageX, pageY};\n    this._touchActivateTime = Date.now();\n    if (onPressIn != null) {\n      onPressIn(event);\n    }\n  }\n\n  _deactivate(event: PressEvent): void {\n    const {onPressOut} = this._config;\n    if (onPressOut != null) {\n      const minPressDuration = normalizeDelay(\n        this._config.minPressDuration,\n        0,\n        DEFAULT_MIN_PRESS_DURATION,\n      );\n      const pressDuration = Date.now() - (this._touchActivateTime ?? 0);\n      const delayPressOut = Math.max(\n        minPressDuration - pressDuration,\n        normalizeDelay(this._config.delayPressOut),\n      );\n      if (delayPressOut > 0) {\n        event.persist();\n        this._pressOutDelayTimeout = setTimeout(() => {\n          onPressOut(event);\n        }, delayPressOut);\n      } else {\n        onPressOut(event);\n      }\n    }\n    this._touchActivateTime = null;\n  }\n\n  _measureResponderRegion(): void {\n    if (this._responderID == null) {\n      return;\n    }\n\n    if (typeof this._responderID === 'number') {\n      UIManager.measure(this._responderID, this._measureCallback);\n    } else {\n      this._responderID.measure(this._measureCallback);\n    }\n  }\n\n  _measureCallback = (\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    pageX: number,\n    pageY: number,\n  ) => {\n    if (!left && !top && !width && !height && !pageX && !pageY) {\n      return;\n    }\n    this._responderRegion = {\n      bottom: pageY + height,\n      left: pageX,\n      right: pageX + width,\n      top: pageY,\n    };\n  };\n\n  _isTouchWithinResponderRegion(\n    touch: $PropertyType<PressEvent, 'nativeEvent'>,\n    responderRegion: $ReadOnly<{|\n      bottom: number,\n      left: number,\n      right: number,\n      top: number,\n    |}>,\n  ): boolean {\n    const hitSlop = normalizeRect(this._config.hitSlop);\n    const pressRectOffset = normalizeRect(this._config.pressRectOffset);\n\n    let regionBottom = responderRegion.bottom;\n    let regionLeft = responderRegion.left;\n    let regionRight = responderRegion.right;\n    let regionTop = responderRegion.top;\n\n    if (hitSlop != null) {\n      if (hitSlop.bottom != null) {\n        regionBottom += hitSlop.bottom;\n      }\n      if (hitSlop.left != null) {\n        regionLeft -= hitSlop.left;\n      }\n      if (hitSlop.right != null) {\n        regionRight += hitSlop.right;\n      }\n      if (hitSlop.top != null) {\n        regionTop -= hitSlop.top;\n      }\n    }\n\n    regionBottom +=\n      pressRectOffset?.bottom ?? DEFAULT_PRESS_RECT_OFFSETS.bottom;\n    regionLeft -= pressRectOffset?.left ?? DEFAULT_PRESS_RECT_OFFSETS.left;\n    regionRight += pressRectOffset?.right ?? DEFAULT_PRESS_RECT_OFFSETS.right;\n    regionTop -= pressRectOffset?.top ?? DEFAULT_PRESS_RECT_OFFSETS.top;\n\n    return (\n      touch.pageX > regionLeft &&\n      touch.pageX < regionRight &&\n      touch.pageY > regionTop &&\n      touch.pageY < regionBottom\n    );\n  }\n\n  _handleLongPress(event: PressEvent): void {\n    if (\n      this._touchState === 'RESPONDER_ACTIVE_PRESS_IN' ||\n      this._touchState === 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n    ) {\n      this._receiveSignal('LONG_PRESS_DETECTED', event);\n    }\n  }\n\n  _shouldLongPressCancelPress(): boolean {\n    return (\n      this._config.onLongPressShouldCancelPress_DEPRECATED == null ||\n      this._config.onLongPressShouldCancelPress_DEPRECATED()\n    );\n  }\n\n  _cancelHoverInDelayTimeout(): void {\n    if (this._hoverInDelayTimeout != null) {\n      clearTimeout(this._hoverInDelayTimeout);\n      this._hoverInDelayTimeout = null;\n    }\n  }\n\n  _cancelHoverOutDelayTimeout(): void {\n    if (this._hoverOutDelayTimeout != null) {\n      clearTimeout(this._hoverOutDelayTimeout);\n      this._hoverOutDelayTimeout = null;\n    }\n  }\n\n  _cancelLongPressDelayTimeout(): void {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressDelayTimeout(): void {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressOutDelayTimeout(): void {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n}\n\nfunction normalizeDelay(\n  delay: ?number,\n  min: number = 0,\n  fallback: number = 0,\n): number {\n  return Math.max(min, delay ?? fallback);\n}\n\nconst getTouchFromPressEvent = (event: PressEvent) => {\n  const {changedTouches, touches} = event.nativeEvent;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n};\n\nfunction convertPointerEventToMouseEvent(input: PointerEvent): MouseEvent {\n  const {clientX, clientY} = input.nativeEvent;\n  return {\n    ...input,\n    nativeEvent: {\n      clientX,\n      clientY,\n      pageX: clientX,\n      pageY: clientY,\n      timestamp: input.timeStamp,\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}