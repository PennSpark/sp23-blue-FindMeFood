{"ast":null,"code":"'use strict';\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar View = require(\"../Components/View/View\");\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\nvar Dimensions = require(\"../Utilities/Dimensions\");\nvar ElementBox = require(\"./ElementBox\");\nvar React = require('react');\nvar InspectorOverlay = function (_React$Component) {\n  _inherits(InspectorOverlay, _React$Component);\n  var _super = _createSuper(InspectorOverlay);\n  function InspectorOverlay() {\n    var _this;\n    _classCallCheck(this, InspectorOverlay);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.findViewForTouchEvent = function (e) {\n      var _e$nativeEvent$touche = e.nativeEvent.touches[0],\n        locationX = _e$nativeEvent$touche.locationX,\n        locationY = _e$nativeEvent$touche.locationY;\n      _this.props.onTouchPoint(locationX, locationY);\n    };\n    _this.shouldSetResponser = function (e) {\n      _this.findViewForTouchEvent(e);\n      return true;\n    };\n    return _this;\n  }\n  _createClass(InspectorOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var content = null;\n      if (this.props.inspected) {\n        content = _reactJsxRuntime.jsx(ElementBox, {\n          frame: this.props.inspected.frame,\n          style: this.props.inspected.style\n        });\n      }\n      return _reactJsxRuntime.jsx(View, {\n        onStartShouldSetResponder: this.shouldSetResponser,\n        onResponderMove: this.findViewForTouchEvent,\n        nativeID: \"inspectorOverlay\",\n        style: [styles.inspector, {\n          height: Dimensions.get('window').height\n        }],\n        children: content\n      });\n    }\n  }]);\n  return InspectorOverlay;\n}(React.Component);\nvar styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0\n  }\n});\nmodule.exports = InspectorOverlay;","map":{"version":3,"names":["View","require","StyleSheet","Dimensions","ElementBox","React","InspectorOverlay","findViewForTouchEvent","e","nativeEvent","touches","locationX","locationY","props","onTouchPoint","shouldSetResponser","content","inspected","frame","style","styles","inspector","height","get","Component","create","backgroundColor","position","left","top","right","module","exports"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions');\nconst ElementBox = require('./ElementBox');\nconst React = require('react');\n\ntype Inspected = $ReadOnly<{|\n  frame?: Object,\n  style?: ViewStyleProp,\n|}>;\n\ntype Props = $ReadOnly<{|\n  inspected?: Inspected,\n  onTouchPoint: (locationX: number, locationY: number) => void,\n|}>;\n\nclass InspectorOverlay extends React.Component<Props> {\n  findViewForTouchEvent: (e: PressEvent) => void = (e: PressEvent) => {\n    const {locationX, locationY} = e.nativeEvent.touches[0];\n\n    this.props.onTouchPoint(locationX, locationY);\n  };\n\n  shouldSetResponser: (e: PressEvent) => boolean = (e: PressEvent): boolean => {\n    this.findViewForTouchEvent(e);\n    return true;\n  };\n\n  render(): React.Node {\n    let content = null;\n    if (this.props.inspected) {\n      content = (\n        <ElementBox\n          frame={this.props.inspected.frame}\n          style={this.props.inspected.style}\n        />\n      );\n    }\n\n    return (\n      <View\n        onStartShouldSetResponder={this.shouldSetResponser}\n        onResponderMove={this.findViewForTouchEvent}\n        nativeID=\"inspectorOverlay\" /* TODO: T68258846. */\n        style={[styles.inspector, {height: Dimensions.get('window').height}]}>\n        {content}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = InspectorOverlay;\n"],"mappings":"AAUA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKb,IAAMA,IAAI,GAAGC,OAAO,2BAA2B;AAC/C,IAAMC,UAAU,GAAGD,OAAO,4BAA4B;AACtD,IAAME,UAAU,GAAGF,OAAO,2BAA2B;AACrD,IAAMG,UAAU,GAAGH,OAAO,gBAAgB;AAC1C,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAAC,IAYzBK,gBAAgB;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MACpBC,qBAAqB,GAA4B,UAACC,CAAa,EAAK;MAClE,4BAA+BA,CAAC,CAACC,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;QAAhDC,SAAS,yBAATA,SAAS;QAAEC,SAAS,yBAATA,SAAS;MAE3B,MAAKC,KAAK,CAACC,YAAY,CAACH,SAAS,EAAEC,SAAS,CAAC;IAC/C,CAAC;IAAA,MAEDG,kBAAkB,GAA+B,UAACP,CAAa,EAAc;MAC3E,MAAKD,qBAAqB,CAACC,CAAC,CAAC;MAC7B,OAAO,IAAI;IACb,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAED,kBAAqB;MACnB,IAAIQ,OAAO,GAAG,IAAI;MAClB,IAAI,IAAI,CAACH,KAAK,CAACI,SAAS,EAAE;QACxBD,OAAO,GACL,qBAAC,UAAU;UACT,KAAK,EAAE,IAAI,CAACH,KAAK,CAACI,SAAS,CAACC,KAAM;UAClC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACI,SAAS,CAACE;QAAM,EAErC;MACH;MAEA,OACE,qBAAC,IAAI;QACH,yBAAyB,EAAE,IAAI,CAACJ,kBAAmB;QACnD,eAAe,EAAE,IAAI,CAACR,qBAAsB;QAC5C,QAAQ,EAAC,kBAAkB;QAC3B,KAAK,EAAE,CAACa,MAAM,CAACC,SAAS,EAAE;UAACC,MAAM,EAAEnB,UAAU,CAACoB,GAAG,CAAC,QAAQ,CAAC,CAACD;QAAM,CAAC,CAAE;QAAA,UACpEN;MAAO,EACH;IAEX;EAAC;EAAA;AAAA,EAhC4BX,KAAK,CAACmB,SAAS;AAmC9C,IAAMJ,MAAM,GAAGlB,UAAU,CAACuB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,eAAe,EAAE,aAAa;IAC9BC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG1B,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}