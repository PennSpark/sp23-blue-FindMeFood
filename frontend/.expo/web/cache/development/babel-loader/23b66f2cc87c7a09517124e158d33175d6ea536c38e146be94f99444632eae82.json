{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport Image from \"../../Image/Image\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport LogBoxLog from \"../Data/LogBoxLog\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxMessage from \"./LogBoxMessage\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LogBoxLogNotification(props) {\n  var totalLogCount = props.totalLogCount,\n    level = props.level,\n    log = props.log;\n  React.useEffect(function () {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n  return _jsx(View, {\n    style: toastStyles.container,\n    children: _jsx(LogBoxButton, {\n      onPress: props.onPressOpen,\n      style: toastStyles.press,\n      backgroundColor: {\n        default: LogBoxStyle.getBackgroundColor(1),\n        pressed: LogBoxStyle.getBackgroundColor(0.9)\n      },\n      children: _jsxs(View, {\n        style: toastStyles.content,\n        children: [_jsx(CountBadge, {\n          count: totalLogCount,\n          level: level\n        }), _jsx(Message, {\n          message: log.message\n        }), _jsx(DismissButton, {\n          onPress: props.onPressDismiss\n        })]\n      })\n    })\n  });\n}\nfunction CountBadge(props) {\n  return _jsx(View, {\n    style: countStyles.outside,\n    children: _jsx(View, {\n      style: [countStyles.inside, countStyles[props.level]],\n      children: _jsx(Text, {\n        style: countStyles.text,\n        children: props.count <= 1 ? '!' : props.count\n      })\n    })\n  });\n}\nfunction Message(props) {\n  return _jsx(View, {\n    style: messageStyles.container,\n    children: _jsx(Text, {\n      numberOfLines: 1,\n      style: messageStyles.text,\n      children: props.message && _jsx(LogBoxMessage, {\n        plaintext: true,\n        message: props.message,\n        style: messageStyles.substitutionText\n      })\n    })\n  });\n}\nfunction DismissButton(props) {\n  return _jsx(View, {\n    style: dismissStyles.container,\n    children: _jsx(LogBoxButton, {\n      backgroundColor: {\n        default: LogBoxStyle.getTextColor(0.3),\n        pressed: LogBoxStyle.getTextColor(0.5)\n      },\n      hitSlop: {\n        top: 12,\n        right: 10,\n        bottom: 12,\n        left: 10\n      },\n      onPress: props.onPress,\n      style: dismissStyles.press,\n      children: _jsx(Image, {\n        source: require(\"./LogBoxImages/close.png\"),\n        style: dismissStyles.image\n      })\n    })\n  });\n}\nvar countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1)\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1)\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1)\n  },\n  outside: {\n    padding: 2,\n    borderRadius: 25,\n    backgroundColor: '#fff',\n    marginRight: 8\n  },\n  inside: {\n    minWidth: 18,\n    paddingLeft: 4,\n    paddingRight: 4,\n    borderRadius: 25,\n    fontWeight: '600'\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.4),\n    textShadowOffset: {\n      width: 0,\n      height: 0\n    },\n    textShadowRadius: 3\n  }\n});\nvar messageStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n    borderLeftColor: LogBoxStyle.getTextColor(0.2),\n    borderLeftWidth: 1,\n    paddingLeft: 8\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6)\n  }\n});\nvar dismissStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n    marginLeft: 5\n  },\n  press: {\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    height: 8,\n    width: 8,\n    tintColor: LogBoxStyle.getBackgroundColor(1)\n  }\n});\nvar toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1)\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto'\n  }\n});\nexport default LogBoxLogNotification;","map":{"version":3,"names":["View","Image","StyleSheet","Text","LogBoxData","LogBoxLog","LogBoxButton","LogBoxMessage","LogBoxStyle","React","LogBoxLogNotification","props","totalLogCount","level","log","useEffect","symbolicateLogLazy","toastStyles","container","onPressOpen","press","default","getBackgroundColor","pressed","content","message","onPressDismiss","CountBadge","countStyles","outside","inside","text","count","Message","messageStyles","substitutionText","DismissButton","dismissStyles","getTextColor","top","right","bottom","left","onPress","require","image","create","warn","backgroundColor","getWarningColor","error","getErrorColor","getLogColor","padding","borderRadius","marginRight","minWidth","paddingLeft","paddingRight","fontWeight","color","fontSize","lineHeight","textAlign","textShadowColor","textShadowOffset","width","height","textShadowRadius","alignSelf","flexGrow","flexShrink","flexBasis","borderLeftColor","borderLeftWidth","flex","flexDirection","marginLeft","alignItems","justifyContent","tintColor","position","marginTop","paddingHorizontal"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {Message as MessageType} from '../Data/parseLogBoxLog';\n\nimport View from '../../Components/View/View';\nimport Image from '../../Image/Image';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport LogBoxLog from '../Data/LogBoxLog';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxMessage from './LogBoxMessage';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  log: LogBoxLog,\n  totalLogCount: number,\n  level: 'warn' | 'error',\n  onPressOpen: () => void,\n  onPressDismiss: () => void,\n|}>;\n\nfunction LogBoxLogNotification(props: Props): React.Node {\n  const {totalLogCount, level, log} = props;\n\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  React.useEffect(() => {\n    LogBoxData.symbolicateLogLazy(log);\n  }, [log]);\n\n  return (\n    <View style={toastStyles.container}>\n      <LogBoxButton\n        onPress={props.onPressOpen}\n        style={toastStyles.press}\n        backgroundColor={{\n          default: LogBoxStyle.getBackgroundColor(1),\n          pressed: LogBoxStyle.getBackgroundColor(0.9),\n        }}>\n        <View style={toastStyles.content}>\n          <CountBadge count={totalLogCount} level={level} />\n          <Message message={log.message} />\n          <DismissButton onPress={props.onPressDismiss} />\n        </View>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nfunction CountBadge(\n  props: $TEMPORARY$object<{count: number, level: 'error' | 'warn'}>,\n) {\n  return (\n    <View style={countStyles.outside}>\n      {/* $FlowFixMe[incompatible-type] (>=0.114.0) This suppression was added\n       * when fixing the type of `StyleSheet.create`. Remove this comment to\n       * see the error. */}\n      <View style={[countStyles.inside, countStyles[props.level]]}>\n        <Text style={countStyles.text}>\n          {props.count <= 1 ? '!' : props.count}\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nfunction Message(props: $TEMPORARY$object<{message: MessageType}>) {\n  return (\n    <View style={messageStyles.container}>\n      <Text numberOfLines={1} style={messageStyles.text}>\n        {props.message && (\n          <LogBoxMessage\n            plaintext\n            message={props.message}\n            style={messageStyles.substitutionText}\n          />\n        )}\n      </Text>\n    </View>\n  );\n}\n\nfunction DismissButton(props: $TEMPORARY$object<{onPress: () => void}>) {\n  return (\n    <View style={dismissStyles.container}>\n      <LogBoxButton\n        backgroundColor={{\n          default: LogBoxStyle.getTextColor(0.3),\n          pressed: LogBoxStyle.getTextColor(0.5),\n        }}\n        hitSlop={{\n          top: 12,\n          right: 10,\n          bottom: 12,\n          left: 10,\n        }}\n        onPress={props.onPress}\n        style={dismissStyles.press}>\n        <Image\n          source={require('./LogBoxImages/close.png')}\n          style={dismissStyles.image}\n        />\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  outside: {\n    padding: 2,\n    borderRadius: 25,\n    backgroundColor: '#fff',\n    marginRight: 8,\n  },\n  inside: {\n    minWidth: 18,\n    paddingLeft: 4,\n    paddingRight: 4,\n    borderRadius: 25,\n    fontWeight: '600',\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.4),\n    textShadowOffset: {width: 0, height: 0},\n    textShadowRadius: 3,\n  },\n});\n\nconst messageStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n    borderLeftColor: LogBoxStyle.getTextColor(0.2),\n    borderLeftWidth: 1,\n    paddingLeft: 8,\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    lineHeight: 22,\n  },\n  substitutionText: {\n    color: LogBoxStyle.getTextColor(0.6),\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n    marginLeft: 5,\n  },\n  press: {\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    height: 8,\n    width: 8,\n    tintColor: LogBoxStyle.getBackgroundColor(1),\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    backgroundColor: LogBoxStyle.getTextColor(1),\n  },\n  press: {\n    height: 48,\n    position: 'relative',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 0.5,\n    paddingHorizontal: 12,\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    borderRadius: 8,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: 'auto',\n  },\n});\n\nexport default LogBoxLogNotification;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}