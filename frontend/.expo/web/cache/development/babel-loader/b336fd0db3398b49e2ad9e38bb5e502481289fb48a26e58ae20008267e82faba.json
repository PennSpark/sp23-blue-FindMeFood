{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedImplementation from \"./AnimatedImplementation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport AnimatedColor from \"./nodes/AnimatedColor\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nvar inAnimationCallback = false;\nfunction mockAnimationStart(start) {\n  return function (callback) {\n    var guardedCallback = callback == null ? callback : function () {\n      if (inAnimationCallback) {\n        console.warn('Ignoring recursive animation callback when running mock animations');\n        return;\n      }\n      inAnimationCallback = true;\n      try {\n        callback.apply(void 0, arguments);\n      } finally {\n        inAnimationCallback = false;\n      }\n    };\n    start(guardedCallback);\n  };\n}\nvar emptyAnimation = {\n  start: function start() {},\n  stop: function stop() {},\n  reset: function reset() {},\n  _startNativeLoop: function _startNativeLoop() {},\n  _isUsingNativeDriver: function _isUsingNativeDriver() {\n    return false;\n  }\n};\nvar mockCompositeAnimation = function mockCompositeAnimation(animations) {\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      animations.forEach(function (animation) {\n        return animation.start();\n      });\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\nvar spring = function spring(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      anyValue.setValue(config.toValue);\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\nvar timing = function timing(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      anyValue.setValue(config.toValue);\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\nvar decay = function decay(value, config) {\n  return emptyAnimation;\n};\nvar sequence = function sequence(animations) {\n  return mockCompositeAnimation(animations);\n};\nvar parallel = function parallel(animations, config) {\n  return mockCompositeAnimation(animations);\n};\nvar delay = function delay(time) {\n  return emptyAnimation;\n};\nvar stagger = function stagger(time, animations) {\n  return mockCompositeAnimation(animations);\n};\nvar loop = function loop(animation) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$iterations = _ref.iterations,\n    iterations = _ref$iterations === void 0 ? -1 : _ref$iterations;\n  return emptyAnimation;\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["AnimatedEvent","attachNativeEvent","AnimatedImplementation","createAnimatedComponent","AnimatedColor","AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedValueXY","inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","console","warn","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","forEach","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","iterations","Value","ValueXY","Color","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","event","forkEvent","unforkEvent","Event"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/Animated/AnimatedMock.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {Numeric as AnimatedNumeric} from './AnimatedImplementation';\nimport type {EndResult} from './animations/Animation';\nimport type {EndCallback} from './animations/Animation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start: (callback?: ?EndCallback) => void,\n): (callback?: ?EndCallback) => void {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args: Array<EndResult>) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nexport type {AnimatedNumeric as Numeric};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}