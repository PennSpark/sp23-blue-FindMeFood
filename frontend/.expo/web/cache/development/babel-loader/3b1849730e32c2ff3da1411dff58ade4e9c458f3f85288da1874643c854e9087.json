{"ast":null,"code":"import ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport View from \"../../Components/View/View\";\nimport openFileInEditor from \"../../Core/Devtools/openFileInEditor\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport AnsiHighlight from \"./AnsiHighlight\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxInspectorSection from \"./LogBoxInspectorSection\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LogBoxInspectorCodeFrame(props) {\n  var codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n  function getFileName() {\n    var matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n    return codeFrame.fileName;\n  }\n  function getLocation() {\n    var location = codeFrame.location;\n    if (location != null) {\n      return \" (\" + location.row + \":\" + (location.column + 1) + \")\";\n    }\n    return null;\n  }\n  return _jsx(LogBoxInspectorSection, {\n    heading: \"Source\",\n    action: _jsx(AppInfo, {}),\n    children: _jsxs(View, {\n      style: styles.box,\n      children: [_jsx(View, {\n        style: styles.frame,\n        children: _jsx(ScrollView, {\n          horizontal: true,\n          children: _jsx(AnsiHighlight, {\n            style: styles.content,\n            text: codeFrame.content\n          })\n        })\n      }), _jsx(LogBoxButton, {\n        backgroundColor: {\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundDarkColor(1)\n        },\n        style: styles.button,\n        onPress: function onPress() {\n          var _codeFrame$location$r, _codeFrame$location;\n          openFileInEditor(codeFrame.fileName, (_codeFrame$location$r = (_codeFrame$location = codeFrame.location) == null ? void 0 : _codeFrame$location.row) != null ? _codeFrame$location$r : 0);\n        },\n        children: _jsxs(Text, {\n          style: styles.fileText,\n          children: [getFileName(), getLocation()]\n        })\n      })]\n    })\n  });\n}\nfunction AppInfo() {\n  var appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n  return _jsx(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: appInfo.onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n    },\n    style: appInfoStyles.buildButton,\n    onPress: appInfo.onPress,\n    children: _jsxs(Text, {\n      style: appInfoStyles.text,\n      children: [appInfo.appVersion, \" (\", appInfo.engine, \")\"]\n    })\n  });\n}\nvar appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8\n  }\n});\nvar styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  }\n});\nexport default LogBoxInspectorCodeFrame;","map":{"version":3,"names":["ScrollView","View","openFileInEditor","StyleSheet","Text","Platform","LogBoxData","AnsiHighlight","LogBoxButton","LogBoxInspectorSection","LogBoxStyle","React","LogBoxInspectorCodeFrame","props","codeFrame","getFileName","matches","exec","fileName","length","getLocation","location","row","column","styles","box","frame","content","default","pressed","getBackgroundDarkColor","button","fileText","AppInfo","appInfo","getAppInfo","onPress","getBackgroundColor","appInfoStyles","buildButton","text","appVersion","engine","create","color","getTextColor","fontSize","lineHeight","flex","flexGrow","paddingVertical","paddingHorizontal","borderRadius","marginRight","backgroundColor","marginLeft","marginTop","padding","borderBottomColor","borderBottomWidth","paddingTop","paddingBottom","includeFontPadding","fontFamily","select","android","ios","textAlign"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorCodeFrame.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {CodeFrame} from '../Data/parseLogBoxLog';\n\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport AnsiHighlight from './AnsiHighlight';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\ntype Props = $ReadOnly<{|\n  codeFrame: ?CodeFrame,\n|}>;\n\nfunction LogBoxInspectorCodeFrame(props: Props): React.Node {\n  const codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    // $FlowFixMe[incompatible-use]\n    const matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    // $FlowFixMe[incompatible-use]\n    return codeFrame.fileName;\n  }\n\n  function getLocation() {\n    // $FlowFixMe[incompatible-use]\n    const location = codeFrame.location;\n    if (location != null) {\n      return ` (${location.row}:${\n        location.column + 1 /* Code frame columns are zero indexed */\n      })`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\" action={<AppInfo />}>\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <AnsiHighlight style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}>\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction AppInfo() {\n  const appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: appInfo.onPress\n          ? LogBoxStyle.getBackgroundColor(1)\n          : 'transparent',\n      }}\n      style={appInfoStyles.buildButton}\n      onPress={appInfo.onPress}>\n      <Text style={appInfoStyles.text}>\n        {appInfo.appVersion} ({appInfo.engine})\n      </Text>\n    </LogBoxButton>\n  );\n}\n\nconst appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12,\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n});\n\nexport default LogBoxInspectorCodeFrame;\n"],"mappings":"AAYA,OAAOA,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,gBAAgB;AACvB,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAO,KAAKC,UAAU;AACtB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,sBAAsB;AAC7B,OAAO,KAAKC,WAAW;AACvB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAAA;AAK/B,SAASC,wBAAwB,CAACC,KAAY,EAAc;EAC1D,IAAMC,SAAS,GAAGD,KAAK,CAACC,SAAS;EACjC,IAAIA,SAAS,IAAI,IAAI,EAAE;IACrB,OAAO,IAAI;EACb;EAEA,SAASC,WAAW,GAAG;IAErB,IAAMC,OAAO,GAAG,QAAQ,CAACC,IAAI,CAACH,SAAS,CAACI,QAAQ,CAAC;IACjD,IAAIF,OAAO,IAAIA,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;MACjC,OAAOH,OAAO,CAAC,CAAC,CAAC;IACnB;IAGA,OAAOF,SAAS,CAACI,QAAQ;EAC3B;EAEA,SAASE,WAAW,GAAG;IAErB,IAAMC,QAAQ,GAAGP,SAAS,CAACO,QAAQ;IACnC,IAAIA,QAAQ,IAAI,IAAI,EAAE;MACpB,cAAYA,QAAQ,CAACC,GAAG,UACtBD,QAAQ,CAACE,MAAM,GAAG,CAAC;IAEvB;IAEA,OAAO,IAAI;EACb;EAEA,OACE,KAAC,sBAAsB;IAAC,OAAO,EAAC,QAAQ;IAAC,MAAM,EAAE,KAAC,OAAO,KAAI;IAAA,UAC3D,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,GAAI;MAAA,WACtB,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,KAAM;QAAA,UACxB,KAAC,UAAU;UAAC,UAAU;UAAA,UACpB,KAAC,aAAa;YAAC,KAAK,EAAEF,MAAM,CAACG,OAAQ;YAAC,IAAI,EAAEb,SAAS,CAACa;UAAQ;QAAG;MACtD,EACR,EACP,KAAC,YAAY;QACX,eAAe,EAAE;UACfC,OAAO,EAAE,aAAa;UACtBC,OAAO,EAAEnB,WAAW,CAACoB,sBAAsB,CAAC,CAAC;QAC/C,CAAE;QACF,KAAK,EAAEN,MAAM,CAACO,MAAO;QACrB,OAAO,EAAE,mBAAM;UAAA;UACb7B,gBAAgB,CAACY,SAAS,CAACI,QAAQ,kDAAEJ,SAAS,CAACO,QAAQ,qBAAlB,oBAAoBC,GAAG,oCAAI,CAAC,CAAC;QACpE,CAAE;QAAA,UACF,MAAC,IAAI;UAAC,KAAK,EAAEE,MAAM,CAACQ,QAAS;UAAA,WAC1BjB,WAAW,EAAE,EACbK,WAAW,EAAE;QAAA;MACT,EACM;IAAA;EACV,EACgB;AAE7B;AAEA,SAASa,OAAO,GAAG;EACjB,IAAMC,OAAO,GAAG5B,UAAU,CAAC6B,UAAU,EAAE;EACvC,IAAID,OAAO,IAAI,IAAI,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACE,KAAC,YAAY;IACX,eAAe,EAAE;MACfN,OAAO,EAAE,aAAa;MACtBC,OAAO,EAAEK,OAAO,CAACE,OAAO,GACpB1B,WAAW,CAAC2B,kBAAkB,CAAC,CAAC,CAAC,GACjC;IACN,CAAE;IACF,KAAK,EAAEC,aAAa,CAACC,WAAY;IACjC,OAAO,EAAEL,OAAO,CAACE,OAAQ;IAAA,UACzB,MAAC,IAAI;MAAC,KAAK,EAAEE,aAAa,CAACE,IAAK;MAAA,WAC7BN,OAAO,CAACO,UAAU,EAAC,IAAE,EAACP,OAAO,CAACQ,MAAM,EAAC,GACxC;IAAA;EAAO,EACM;AAEnB;AAEA,IAAMJ,aAAa,GAAGnC,UAAU,CAACwC,MAAM,CAAC;EACtCH,IAAI,EAAE;IACJI,KAAK,EAAElC,WAAW,CAACmC,YAAY,CAAC,GAAG,CAAC;IACpCC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDR,WAAW,EAAE;IACXS,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,CAAC;IACXC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;EAChB;AACF,CAAC,CAAC;AAEF,IAAM7B,MAAM,GAAGrB,UAAU,CAACwC,MAAM,CAAC;EAC/BlB,GAAG,EAAE;IACH6B,eAAe,EAAE5C,WAAW,CAAC2B,kBAAkB,EAAE;IACjDkB,UAAU,EAAE,EAAE;IACdF,WAAW,EAAE,EAAE;IACfG,SAAS,EAAE,CAAC;IACZJ,YAAY,EAAE;EAChB,CAAC;EACD1B,KAAK,EAAE;IACL+B,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAEhD,WAAW,CAACmC,YAAY,CAAC,GAAG,CAAC;IAChDc,iBAAiB,EAAE;EACrB,CAAC;EACD5B,MAAM,EAAE;IACN6B,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACDlC,OAAO,EAAE;IACPiB,KAAK,EAAElC,WAAW,CAACmC,YAAY,CAAC,CAAC,CAAC;IAClCC,QAAQ,EAAE,EAAE;IACZgB,kBAAkB,EAAE,KAAK;IACzBf,UAAU,EAAE,EAAE;IACdgB,UAAU,EAAE1D,QAAQ,CAAC2D,MAAM,CAAC;MAACC,OAAO,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAO,CAAC;EAClE,CAAC;EACDlC,QAAQ,EAAE;IACRY,KAAK,EAAElC,WAAW,CAACmC,YAAY,CAAC,GAAG,CAAC;IACpCsB,SAAS,EAAE,QAAQ;IACnBnB,IAAI,EAAE,CAAC;IACPF,QAAQ,EAAE,EAAE;IACZgB,kBAAkB,EAAE,KAAK;IACzBf,UAAU,EAAE,EAAE;IACdgB,UAAU,EAAE1D,QAAQ,CAAC2D,MAAM,CAAC;MAACC,OAAO,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAO,CAAC;EAClE;AACF,CAAC,CAAC;AAEF,eAAetD,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}