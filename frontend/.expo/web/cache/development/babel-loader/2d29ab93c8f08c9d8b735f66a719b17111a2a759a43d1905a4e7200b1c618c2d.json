{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport GlobalPerformanceLogger from \"../Utilities/GlobalPerformanceLogger\";\nimport PerformanceLoggerContext from \"../Utilities/PerformanceLoggerContext\";\nimport AppContainer from \"./AppContainer\";\nimport DisplayMode from \"./DisplayMode\";\nimport getCachedComponentWithDebugName from \"./getCachedComponentWithDebugName\";\nimport * as Renderer from \"./RendererProxy\";\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport \"../Utilities/BackHandler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent, fabric, showArchitectureIndicator, scopedPerformanceLogger, isLogBox, debugName, displayMode, useConcurrentRoot, useOffscreen) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n  var performanceLogger = scopedPerformanceLogger != null ? scopedPerformanceLogger : GlobalPerformanceLogger;\n  var renderable = _jsx(PerformanceLoggerContext.Provider, {\n    value: performanceLogger,\n    children: _jsx(AppContainer, {\n      rootTag: rootTag,\n      fabric: fabric,\n      showArchitectureIndicator: showArchitectureIndicator,\n      WrapperComponent: WrapperComponent,\n      initialProps: initialProps != null ? initialProps : Object.freeze({}),\n      internal_excludeLogBox: isLogBox,\n      children: _jsx(RootComponent, _objectSpread(_objectSpread({}, initialProps), {}, {\n        rootTag: rootTag\n      }))\n    })\n  });\n  if (__DEV__ && debugName) {\n    var RootComponentWithMeaningfulName = getCachedComponentWithDebugName(debugName + \"(RootComponent)\");\n    renderable = _jsx(RootComponentWithMeaningfulName, {\n      children: renderable\n    });\n  }\n  if (useOffscreen && displayMode != null) {\n    var Offscreen = React.unstable_Offscreen;\n    renderable = _jsx(Offscreen, {\n      mode: displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden',\n      children: renderable\n    });\n  }\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra('usedReactConcurrentRoot', useConcurrentRoot ? '1' : '0');\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra('usedReactProfiler', Renderer.isProfilingRenderer());\n  Renderer.renderElement({\n    element: renderable,\n    rootTag: rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRoot)\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}","map":{"version":3,"names":["GlobalPerformanceLogger","PerformanceLoggerContext","AppContainer","DisplayMode","getCachedComponentWithDebugName","Renderer","invariant","React","renderApplication","RootComponent","initialProps","rootTag","WrapperComponent","fabric","showArchitectureIndicator","scopedPerformanceLogger","isLogBox","debugName","displayMode","useConcurrentRoot","useOffscreen","performanceLogger","renderable","Object","freeze","__DEV__","RootComponentWithMeaningfulName","Offscreen","unstable_Offscreen","VISIBLE","startTimespan","setExtra","isProfilingRenderer","renderElement","element","useFabric","Boolean","stopTimespan"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/ReactNative/renderApplication.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport GlobalPerformanceLogger from '../Utilities/GlobalPerformanceLogger';\nimport PerformanceLoggerContext from '../Utilities/PerformanceLoggerContext';\nimport AppContainer from './AppContainer';\nimport DisplayMode, {type DisplayModeType} from './DisplayMode';\nimport getCachedComponentWithDebugName from './getCachedComponentWithDebugName';\nimport * as Renderer from './RendererProxy';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n// require BackHandler so it sets the default handler that exits the app if no listeners respond\nimport '../Utilities/BackHandler';\n\ntype OffscreenType = React.AbstractComponent<{\n  mode: 'visible' | 'hidden',\n  children: React.Node,\n}>;\n\nexport default function renderApplication<Props: Object>(\n  RootComponent: React.ComponentType<Props>,\n  initialProps: Props,\n  rootTag: any,\n  WrapperComponent?: ?React.ComponentType<any>,\n  fabric?: boolean,\n  showArchitectureIndicator?: boolean,\n  scopedPerformanceLogger?: IPerformanceLogger,\n  isLogBox?: boolean,\n  debugName?: string,\n  displayMode?: ?DisplayModeType,\n  useConcurrentRoot?: boolean,\n  useOffscreen?: boolean,\n) {\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n\n  const performanceLogger = scopedPerformanceLogger ?? GlobalPerformanceLogger;\n\n  let renderable: React.MixedElement = (\n    <PerformanceLoggerContext.Provider value={performanceLogger}>\n      <AppContainer\n        rootTag={rootTag}\n        fabric={fabric}\n        showArchitectureIndicator={showArchitectureIndicator}\n        WrapperComponent={WrapperComponent}\n        initialProps={initialProps ?? Object.freeze({})}\n        internal_excludeLogBox={isLogBox}>\n        <RootComponent {...initialProps} rootTag={rootTag} />\n      </AppContainer>\n    </PerformanceLoggerContext.Provider>\n  );\n\n  if (__DEV__ && debugName) {\n    const RootComponentWithMeaningfulName = getCachedComponentWithDebugName(\n      `${debugName}(RootComponent)`,\n    );\n    renderable = (\n      <RootComponentWithMeaningfulName>\n        {renderable}\n      </RootComponentWithMeaningfulName>\n    );\n  }\n\n  if (useOffscreen && displayMode != null) {\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[prop-missing]\n    const Offscreen: OffscreenType = React.unstable_Offscreen;\n\n    renderable = (\n      <Offscreen\n        mode={displayMode === DisplayMode.VISIBLE ? 'visible' : 'hidden'}>\n        {renderable}\n      </Offscreen>\n    );\n  }\n\n  performanceLogger.startTimespan('renderApplication_React_render');\n  performanceLogger.setExtra(\n    'usedReactConcurrentRoot',\n    useConcurrentRoot ? '1' : '0',\n  );\n  performanceLogger.setExtra('usedReactFabric', fabric ? '1' : '0');\n  performanceLogger.setExtra(\n    'usedReactProfiler',\n    Renderer.isProfilingRenderer(),\n  );\n  Renderer.renderElement({\n    element: renderable,\n    rootTag,\n    useFabric: Boolean(fabric),\n    useConcurrentRoot: Boolean(useConcurrentRoot),\n  });\n  performanceLogger.stopTimespan('renderApplication_React_render');\n}\n"],"mappings":";;;AAYA,OAAOA,uBAAuB;AAC9B,OAAOC,wBAAwB;AAC/B,OAAOC,YAAY;AACnB,OAAOC,WAAW;AAClB,OAAOC,+BAA+B;AACtC,OAAO,KAAKC,QAAQ;AACpB,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAG9B;AAAkC;AAOlC,eAAe,SAASC,iBAAiB,CACvCC,aAAyC,EACzCC,YAAmB,EACnBC,OAAY,EACZC,gBAA4C,EAC5CC,MAAgB,EAChBC,yBAAmC,EACnCC,uBAA4C,EAC5CC,QAAkB,EAClBC,SAAkB,EAClBC,WAA8B,EAC9BC,iBAA2B,EAC3BC,YAAsB,EACtB;EACAd,SAAS,CAACK,OAAO,EAAE,8CAA8C,EAAEA,OAAO,CAAC;EAE3E,IAAMU,iBAAiB,GAAGN,uBAAuB,WAAvBA,uBAAuB,GAAIf,uBAAuB;EAE5E,IAAIsB,UAA8B,GAChC,KAAC,wBAAwB,CAAC,QAAQ;IAAC,KAAK,EAAED,iBAAkB;IAAA,UAC1D,KAAC,YAAY;MACX,OAAO,EAAEV,OAAQ;MACjB,MAAM,EAAEE,MAAO;MACf,yBAAyB,EAAEC,yBAA0B;MACrD,gBAAgB,EAAEF,gBAAiB;MACnC,YAAY,EAAEF,YAAY,WAAZA,YAAY,GAAIa,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAE;MAChD,sBAAsB,EAAER,QAAS;MAAA,UACjC,KAAC,aAAa,kCAAKN,YAAY;QAAE,OAAO,EAAEC;MAAQ;IAAG;EACxC,EAElB;EAED,IAAIc,OAAO,IAAIR,SAAS,EAAE;IACxB,IAAMS,+BAA+B,GAAGtB,+BAA+B,CAClEa,SAAS,qBACb;IACDK,UAAU,GACR,KAAC,+BAA+B;MAAA,UAC7BA;IAAU,EAEd;EACH;EAEA,IAAIF,YAAY,IAAIF,WAAW,IAAI,IAAI,EAAE;IAGvC,IAAMS,SAAwB,GAAGpB,KAAK,CAACqB,kBAAkB;IAEzDN,UAAU,GACR,KAAC,SAAS;MACR,IAAI,EAAEJ,WAAW,KAAKf,WAAW,CAAC0B,OAAO,GAAG,SAAS,GAAG,QAAS;MAAA,UAChEP;IAAU,EAEd;EACH;EAEAD,iBAAiB,CAACS,aAAa,CAAC,gCAAgC,CAAC;EACjET,iBAAiB,CAACU,QAAQ,CACxB,yBAAyB,EACzBZ,iBAAiB,GAAG,GAAG,GAAG,GAAG,CAC9B;EACDE,iBAAiB,CAACU,QAAQ,CAAC,iBAAiB,EAAElB,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;EACjEQ,iBAAiB,CAACU,QAAQ,CACxB,mBAAmB,EACnB1B,QAAQ,CAAC2B,mBAAmB,EAAE,CAC/B;EACD3B,QAAQ,CAAC4B,aAAa,CAAC;IACrBC,OAAO,EAAEZ,UAAU;IACnBX,OAAO,EAAPA,OAAO;IACPwB,SAAS,EAAEC,OAAO,CAACvB,MAAM,CAAC;IAC1BM,iBAAiB,EAAEiB,OAAO,CAACjB,iBAAiB;EAC9C,CAAC,CAAC;EACFE,iBAAiB,CAACgB,YAAY,CAAC,gCAAgC,CAAC;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}