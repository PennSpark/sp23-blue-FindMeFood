{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport View from \"../Components/View/View\";\nimport StyleSheet from \"../StyleSheet/StyleSheet\";\nimport * as LogBoxData from \"./Data/LogBoxData\";\nimport LogBoxInspector from \"./UI/LogBoxInspector\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var _LogBoxInspectorContainer = function (_React$Component) {\n  _inherits(_LogBoxInspectorContainer, _React$Component);\n  var _super = _createSuper(_LogBoxInspectorContainer);\n  function _LogBoxInspectorContainer() {\n    var _this;\n    _classCallCheck(this, _LogBoxInspectorContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._handleDismiss = function () {\n      var _this$props = _this.props,\n        selectedLogIndex = _this$props.selectedLogIndex,\n        logs = _this$props.logs;\n      var logsArray = Array.from(logs);\n      if (selectedLogIndex != null) {\n        if (logsArray.length - 1 <= 0) {\n          LogBoxData.setSelectedLog(-1);\n        } else if (selectedLogIndex >= logsArray.length - 1) {\n          LogBoxData.setSelectedLog(selectedLogIndex - 1);\n        }\n        LogBoxData.dismiss(logsArray[selectedLogIndex]);\n      }\n    };\n    _this._handleMinimize = function () {\n      LogBoxData.setSelectedLog(-1);\n    };\n    _this._handleSetSelectedLog = function (index) {\n      LogBoxData.setSelectedLog(index);\n    };\n    return _this;\n  }\n  _createClass(_LogBoxInspectorContainer, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: StyleSheet.absoluteFill,\n        children: _jsx(LogBoxInspector, {\n          onDismiss: this._handleDismiss,\n          onMinimize: this._handleMinimize,\n          onChangeSelectedIndex: this._handleSetSelectedLog,\n          logs: this.props.logs,\n          selectedIndex: this.props.selectedLogIndex\n        })\n      });\n    }\n  }]);\n  return _LogBoxInspectorContainer;\n}(React.Component);\nexport default LogBoxData.withSubscription(_LogBoxInspectorContainer);","map":{"version":3,"names":["View","StyleSheet","LogBoxData","LogBoxInspector","React","_LogBoxInspectorContainer","_handleDismiss","props","selectedLogIndex","logs","logsArray","Array","from","length","setSelectedLog","dismiss","_handleMinimize","_handleSetSelectedLog","index","absoluteFill","Component","withSubscription"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/LogBox/LogBoxInspectorContainer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type LogBoxLog from './Data/LogBoxLog';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport class _LogBoxInspectorContainer extends React.Component<Props> {\n  render(): React.Node {\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <LogBoxInspector\n          onDismiss={this._handleDismiss}\n          onMinimize={this._handleMinimize}\n          onChangeSelectedIndex={this._handleSetSelectedLog}\n          logs={this.props.logs}\n          selectedIndex={this.props.selectedLogIndex}\n        />\n      </View>\n    );\n  }\n\n  _handleDismiss = (): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const {selectedLogIndex, logs} = this.props;\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  };\n\n  _handleMinimize = (): void => {\n    LogBoxData.setSelectedLog(-1);\n  };\n\n  _handleSetSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n}\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxInspectorContainer,\n): React.AbstractComponent<{||}>);\n"],"mappings":";;;;;;;AAYA,OAAOA,IAAI;AACX,OAAOC,UAAU;AACjB,OAAO,KAAKC,UAAU;AACtB,OAAOC,eAAe;AACtB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAQ/B,WAAaC,yBAAyB;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAepCC,cAAc,GAAG,YAAY;MAI3B,kBAAiC,MAAKC,KAAK;QAApCC,gBAAgB,eAAhBA,gBAAgB;QAAEC,IAAI,eAAJA,IAAI;MAC7B,IAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;MAClC,IAAID,gBAAgB,IAAI,IAAI,EAAE;QAC5B,IAAIE,SAAS,CAACG,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;UAC7BX,UAAU,CAACY,cAAc,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,MAAM,IAAIN,gBAAgB,IAAIE,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;UACnDX,UAAU,CAACY,cAAc,CAACN,gBAAgB,GAAG,CAAC,CAAC;QACjD;QAEAN,UAAU,CAACa,OAAO,CAACL,SAAS,CAACF,gBAAgB,CAAC,CAAC;MACjD;IACF,CAAC;IAAA,MAEDQ,eAAe,GAAG,YAAY;MAC5Bd,UAAU,CAACY,cAAc,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAAA,MAEDG,qBAAqB,GAAG,UAACC,KAAa,EAAW;MAC/ChB,UAAU,CAACY,cAAc,CAACI,KAAK,CAAC;IAClC,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OArCD,kBAAqB;MACnB,OACE,KAAC,IAAI;QAAC,KAAK,EAAEjB,UAAU,CAACkB,YAAa;QAAA,UACnC,KAAC,eAAe;UACd,SAAS,EAAE,IAAI,CAACb,cAAe;UAC/B,UAAU,EAAE,IAAI,CAACU,eAAgB;UACjC,qBAAqB,EAAE,IAAI,CAACC,qBAAsB;UAClD,IAAI,EAAE,IAAI,CAACV,KAAK,CAACE,IAAK;UACtB,aAAa,EAAE,IAAI,CAACF,KAAK,CAACC;QAAiB;MAC3C,EACG;IAEX;EAAC;EAAA;AAAA,EAb4CJ,KAAK,CAACgB,SAAS;AAyC9D,eAAgBlB,UAAU,CAACmB,gBAAgB,CACzChB,yBAAyB,CAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}