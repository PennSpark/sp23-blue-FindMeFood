{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport { ansiToJson } from 'anser';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)'\n};\nexport default function Ansi(_ref) {\n  var text = _ref.text,\n    style = _ref.style;\n  var commonWhitespaceLength = Infinity;\n  var parsedLines = text.split(/\\n/).map(function (line) {\n    return ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true\n    });\n  });\n  parsedLines.map(function (lines) {\n    var _lines$, _lines$$content, _match$;\n    var match = lines[2] && ((_lines$ = lines[2]) == null ? void 0 : (_lines$$content = _lines$.content) == null ? void 0 : _lines$$content.match(/^ +/));\n    var whitespaceLength = match && ((_match$ = match[0]) == null ? void 0 : _match$.length) || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n  var getText = function getText(content, key) {\n    if (key === 1) {\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n  return _jsx(View, {\n    children: parsedLines.map(function (items, i) {\n      return _jsx(View, {\n        style: styles.line,\n        children: items.map(function (bundle, key) {\n          var textStyle = bundle.fg && COLORS[bundle.fg] ? {\n            backgroundColor: bundle.bg && COLORS[bundle.bg],\n            color: bundle.fg && COLORS[bundle.fg]\n          } : {\n            backgroundColor: bundle.bg && COLORS[bundle.bg]\n          };\n          return _jsx(Text, {\n            style: [style, textStyle],\n            children: getText(bundle.content, key)\n          }, key);\n        })\n      }, i);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["View","StyleSheet","Text","ansiToJson","React","COLORS","Ansi","text","style","commonWhitespaceLength","Infinity","parsedLines","split","map","line","json","remove_empty","use_classes","lines","match","content","whitespaceLength","length","getText","key","replace","substr","items","i","styles","bundle","textStyle","fg","backgroundColor","bg","color","create","flexDirection"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport {ansiToJson} from 'anser';\nimport * as React from 'react';\n\n// Afterglow theme from https://iterm2colorschemes.com/\nconst COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  // Instead of white, use the default color provided to the component\n  // 'ansi-white': 'rgb(216, 216, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)',\n};\n\nexport default function Ansi({\n  text,\n  style,\n}: {\n  text: string,\n  style: TextStyleProp,\n  ...\n}): React.Node {\n  let commonWhitespaceLength = Infinity;\n  const parsedLines = text.split(/\\n/).map(line =>\n    ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true,\n    }),\n  );\n\n  parsedLines.map(lines => {\n    // The third item on each line includes the whitespace of the source code.\n    // We are looking for the least amount of common whitespace to trim all lines.\n    // Example: Array [\" \", \" 96 |\", \"     text\", ...]\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\n    const whitespaceLength = (match && match[0]?.length) || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  const getText = (content, key) => {\n    if (key === 1) {\n      // Remove the vertical bar after line numbers\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      // Remove common whitespace at the beginning of the line\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n\n  return (\n    <View>\n      {parsedLines.map((items, i) => (\n        <View style={styles.line} key={i}>\n          {items.map((bundle, key) => {\n            const textStyle =\n              bundle.fg && COLORS[bundle.fg]\n                ? {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                    color: bundle.fg && COLORS[bundle.fg],\n                  }\n                : {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                  };\n            return (\n              <Text style={[style, textStyle]} key={key}>\n                {getText(bundle.content, key)}\n              </Text>\n            );\n          })}\n        </View>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}