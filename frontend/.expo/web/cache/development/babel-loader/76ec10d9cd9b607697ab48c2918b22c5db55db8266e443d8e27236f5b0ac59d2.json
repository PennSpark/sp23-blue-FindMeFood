{"ast":null,"code":"'use strict';\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar ScrollView = require(\"../Components/ScrollView/ScrollView\");\nvar TouchableHighlight = require(\"../Components/Touchable/TouchableHighlight\");\nvar View = require(\"../Components/View/View\");\nvar FlatList = require(\"../Lists/FlatList\");\nvar XHRInterceptor = require(\"../Network/XHRInterceptor\");\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\nvar Text = require(\"../Text/Text\");\nvar WebSocketInterceptor = require(\"../WebSocket/WebSocketInterceptor\");\nvar React = require('react');\nvar LISTVIEW_CELL_HEIGHT = 15;\nvar nextXHRId = 0;\nfunction getStringByValue(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  if (typeof value === 'string' && value.length > 500) {\n    return String(value).substr(0, 500).concat('\\n***TRUNCATED TO 500 CHARACTERS***');\n  }\n  return value;\n}\nfunction getTypeShortName(type) {\n  if (type === 'XMLHttpRequest') {\n    return 'XHR';\n  } else if (type === 'WebSocket') {\n    return 'WS';\n  }\n  return '';\n}\nfunction keyExtractor(request) {\n  return String(request.id);\n}\nvar NetworkOverlay = function (_React$Component) {\n  _inherits(NetworkOverlay, _React$Component);\n  var _super = _createSuper(NetworkOverlay);\n  function NetworkOverlay() {\n    var _this;\n    _classCallCheck(this, NetworkOverlay);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._requestsListViewScrollMetrics = {\n      offset: 0,\n      visibleLength: 0,\n      contentLength: 0\n    };\n    _this._socketIdMap = {};\n    _this._xhrIdMap = {};\n    _this.state = {\n      detailRowId: null,\n      requests: []\n    };\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n        index = _ref.index;\n      var tableRowViewStyle = [styles.tableRow, index % 2 === 1 ? styles.tableRowOdd : styles.tableRowEven, index === _this.state.detailRowId && styles.tableRowPressed];\n      var urlCellViewStyle = styles.urlCellView;\n      var methodCellViewStyle = styles.methodCellView;\n      return _reactJsxRuntime.jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          _this._pressRow(index);\n        },\n        children: _reactJsxRuntime.jsx(View, {\n          children: _reactJsxRuntime.jsxs(View, {\n            style: tableRowViewStyle,\n            children: [_reactJsxRuntime.jsx(View, {\n              style: urlCellViewStyle,\n              children: _reactJsxRuntime.jsx(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: item.url\n              })\n            }), _reactJsxRuntime.jsx(View, {\n              style: methodCellViewStyle,\n              children: _reactJsxRuntime.jsx(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: getTypeShortName(item.type)\n              })\n            })]\n          })\n        })\n      });\n    };\n    _this._indicateAdditionalRequests = function () {\n      if (_this._requestsListView) {\n        var distanceFromEndThreshold = LISTVIEW_CELL_HEIGHT * 2;\n        var _this$_requestsListVi = _this._requestsListViewScrollMetrics,\n          offset = _this$_requestsListVi.offset,\n          visibleLength = _this$_requestsListVi.visibleLength,\n          contentLength = _this$_requestsListVi.contentLength;\n        var distanceFromEnd = contentLength - visibleLength - offset;\n        var isCloseToEnd = distanceFromEnd <= distanceFromEndThreshold;\n        if (isCloseToEnd) {\n          _this._requestsListView.scrollToEnd();\n        } else {\n          _this._requestsListView.flashScrollIndicators();\n        }\n      }\n    };\n    _this._captureRequestsListView = function (listRef) {\n      _this._requestsListView = listRef;\n    };\n    _this._requestsListViewOnScroll = function (e) {\n      _this._requestsListViewScrollMetrics.offset = e.nativeEvent.contentOffset.y;\n      _this._requestsListViewScrollMetrics.visibleLength = e.nativeEvent.layoutMeasurement.height;\n      _this._requestsListViewScrollMetrics.contentLength = e.nativeEvent.contentSize.height;\n    };\n    _this._scrollDetailToTop = function () {\n      if (_this._detailScrollView) {\n        _this._detailScrollView.scrollTo({\n          y: 0,\n          animated: false\n        });\n      }\n    };\n    _this._closeButtonClicked = function () {\n      _this.setState({\n        detailRowId: null\n      });\n    };\n    return _this;\n  }\n  _createClass(NetworkOverlay, [{\n    key: \"_enableXHRInterception\",\n    value: function _enableXHRInterception() {\n      var _this2 = this;\n      if (XHRInterceptor.isInterceptorEnabled()) {\n        return;\n      }\n      XHRInterceptor.setOpenCallback(function (method, url, xhr) {\n        xhr._index = nextXHRId++;\n        var xhrIndex = _this2.state.requests.length;\n        _this2._xhrIdMap[xhr._index] = xhrIndex;\n        var _xhr = {\n          id: xhrIndex,\n          type: 'XMLHttpRequest',\n          method: method,\n          url: url\n        };\n        _this2.setState({\n          requests: _this2.state.requests.concat(_xhr)\n        }, _this2._indicateAdditionalRequests);\n      });\n      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref2) {\n          var requests = _ref2.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          if (!networkRequestInfo.requestHeaders) {\n            networkRequestInfo.requestHeaders = {};\n          }\n          networkRequestInfo.requestHeaders[header] = value;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setSendCallback(function (data, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref3) {\n          var requests = _ref3.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.dataSent = data;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref4) {\n          var requests = _ref4.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.responseContentType = type;\n          networkRequestInfo.responseSize = size;\n          networkRequestInfo.responseHeaders = responseHeaders;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref5) {\n          var requests = _ref5.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.status = status;\n          networkRequestInfo.timeout = timeout;\n          networkRequestInfo.response = response;\n          networkRequestInfo.responseURL = responseURL;\n          networkRequestInfo.responseType = responseType;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.enableInterception();\n    }\n  }, {\n    key: \"_enableWebSocketInterception\",\n    value: function _enableWebSocketInterception() {\n      var _this3 = this;\n      if (WebSocketInterceptor.isInterceptorEnabled()) {\n        return;\n      }\n      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {\n        var socketIndex = _this3.state.requests.length;\n        _this3._socketIdMap[socketId] = socketIndex;\n        var _webSocket = {\n          id: socketIndex,\n          type: 'WebSocket',\n          url: url,\n          protocols: protocols\n        };\n        _this3.setState({\n          requests: _this3.state.requests.concat(_webSocket)\n        }, _this3._indicateAdditionalRequests);\n      });\n      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        if (statusCode !== null && closeReason !== null) {\n          _this3.setState(function (_ref6) {\n            var requests = _ref6.requests;\n            var networkRequestInfo = requests[socketIndex];\n            networkRequestInfo.status = statusCode;\n            networkRequestInfo.closeReason = closeReason;\n            return {\n              requests: requests\n            };\n          });\n        }\n      });\n      WebSocketInterceptor.setSendCallback(function (data, socketId) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref7) {\n          var requests = _ref7.requests;\n          var networkRequestInfo = requests[socketIndex];\n          if (!networkRequestInfo.messages) {\n            networkRequestInfo.messages = '';\n          }\n          networkRequestInfo.messages += 'Sent: ' + JSON.stringify(data) + '\\n';\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref8) {\n          var requests = _ref8.requests;\n          var networkRequestInfo = requests[socketIndex];\n          if (!networkRequestInfo.messages) {\n            networkRequestInfo.messages = '';\n          }\n          networkRequestInfo.messages += 'Received: ' + JSON.stringify(message) + '\\n';\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref9) {\n          var requests = _ref9.requests;\n          var networkRequestInfo = requests[socketIndex];\n          networkRequestInfo.serverClose = message;\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref10) {\n          var requests = _ref10.requests;\n          var networkRequestInfo = requests[socketIndex];\n          networkRequestInfo.serverError = message;\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.enableInterception();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._enableXHRInterception();\n      this._enableWebSocketInterception();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      XHRInterceptor.disableInterception();\n      WebSocketInterceptor.disableInterception();\n    }\n  }, {\n    key: \"_renderItemDetail\",\n    value: function _renderItemDetail(id) {\n      var _this4 = this;\n      var requestItem = this.state.requests[id];\n      var details = Object.keys(requestItem).map(function (key) {\n        if (key === 'id') {\n          return;\n        }\n        return _reactJsxRuntime.jsxs(View, {\n          style: styles.detailViewRow,\n          children: [_reactJsxRuntime.jsx(Text, {\n            style: [styles.detailViewText, styles.detailKeyCellView],\n            children: key\n          }), _reactJsxRuntime.jsx(Text, {\n            style: [styles.detailViewText, styles.detailValueCellView],\n            children: getStringByValue(requestItem[key])\n          })]\n        }, key);\n      });\n      return _reactJsxRuntime.jsxs(View, {\n        children: [_reactJsxRuntime.jsx(TouchableHighlight, {\n          style: styles.closeButton,\n          onPress: this._closeButtonClicked,\n          children: _reactJsxRuntime.jsx(View, {\n            children: _reactJsxRuntime.jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"v\"\n            })\n          })\n        }), _reactJsxRuntime.jsx(ScrollView, {\n          style: styles.detailScrollView,\n          ref: function ref(scrollRef) {\n            return _this4._detailScrollView = scrollRef;\n          },\n          children: details\n        })]\n      });\n    }\n  }, {\n    key: \"_pressRow\",\n    value: function _pressRow(rowId) {\n      this.setState({\n        detailRowId: rowId\n      }, this._scrollDetailToTop);\n    }\n  }, {\n    key: \"_getRequestIndexByXHRID\",\n    value: function _getRequestIndexByXHRID(index) {\n      if (index === undefined) {\n        return -1;\n      }\n      var xhrIndex = this._xhrIdMap[index];\n      if (xhrIndex === undefined) {\n        return -1;\n      } else {\n        return xhrIndex;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        requests = _this$state.requests,\n        detailRowId = _this$state.detailRowId;\n      return _reactJsxRuntime.jsxs(View, {\n        style: styles.container,\n        children: [detailRowId != null && this._renderItemDetail(detailRowId), _reactJsxRuntime.jsx(View, {\n          style: styles.listViewTitle,\n          children: requests.length > 0 && _reactJsxRuntime.jsxs(View, {\n            style: styles.tableRow,\n            children: [_reactJsxRuntime.jsx(View, {\n              style: styles.urlTitleCellView,\n              children: _reactJsxRuntime.jsx(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: \"URL\"\n              })\n            }), _reactJsxRuntime.jsx(View, {\n              style: styles.methodTitleCellView,\n              children: _reactJsxRuntime.jsx(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: \"Type\"\n              })\n            })]\n          })\n        }), _reactJsxRuntime.jsx(FlatList, {\n          ref: this._captureRequestsListView,\n          onScroll: this._requestsListViewOnScroll,\n          style: styles.listView,\n          data: requests,\n          renderItem: this._renderItem,\n          keyExtractor: keyExtractor,\n          extraData: this.state\n        })]\n      });\n    }\n  }]);\n  return NetworkOverlay;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  listViewTitle: {\n    height: 20\n  },\n  listView: {\n    flex: 1,\n    height: 60\n  },\n  tableRow: {\n    flexDirection: 'row',\n    flex: 1,\n    height: LISTVIEW_CELL_HEIGHT\n  },\n  tableRowEven: {\n    backgroundColor: '#555'\n  },\n  tableRowOdd: {\n    backgroundColor: '#000'\n  },\n  tableRowPressed: {\n    backgroundColor: '#3B5998'\n  },\n  cellText: {\n    color: 'white',\n    fontSize: 12\n  },\n  methodTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 1\n  },\n  urlTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 5,\n    paddingLeft: 3\n  },\n  methodCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  urlCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    flex: 5,\n    paddingLeft: 3\n  },\n  detailScrollView: {\n    flex: 1,\n    height: 180,\n    marginTop: 5,\n    marginBottom: 5\n  },\n  detailKeyCellView: {\n    flex: 1.3\n  },\n  detailValueCellView: {\n    flex: 2\n  },\n  detailViewRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 3\n  },\n  detailViewText: {\n    color: 'white',\n    fontSize: 11\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 10\n  },\n  closeButton: {\n    marginTop: 5,\n    backgroundColor: '#888',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nmodule.exports = NetworkOverlay;","map":{"version":3,"names":["ScrollView","require","TouchableHighlight","View","FlatList","XHRInterceptor","StyleSheet","Text","WebSocketInterceptor","React","LISTVIEW_CELL_HEIGHT","nextXHRId","getStringByValue","value","undefined","JSON","stringify","length","String","substr","concat","getTypeShortName","type","keyExtractor","request","id","NetworkOverlay","_requestsListViewScrollMetrics","offset","visibleLength","contentLength","_socketIdMap","_xhrIdMap","state","detailRowId","requests","_renderItem","item","index","tableRowViewStyle","styles","tableRow","tableRowOdd","tableRowEven","tableRowPressed","urlCellViewStyle","urlCellView","methodCellViewStyle","methodCellView","_pressRow","cellText","url","_indicateAdditionalRequests","_requestsListView","distanceFromEndThreshold","distanceFromEnd","isCloseToEnd","scrollToEnd","flashScrollIndicators","_captureRequestsListView","listRef","_requestsListViewOnScroll","e","nativeEvent","contentOffset","y","layoutMeasurement","height","contentSize","_scrollDetailToTop","_detailScrollView","scrollTo","animated","_closeButtonClicked","setState","isInterceptorEnabled","setOpenCallback","method","xhr","_index","xhrIndex","_xhr","setRequestHeaderCallback","header","_getRequestIndexByXHRID","networkRequestInfo","requestHeaders","setSendCallback","data","dataSent","setHeaderReceivedCallback","size","responseHeaders","responseContentType","responseSize","setResponseCallback","status","timeout","response","responseURL","responseType","enableInterception","setConnectCallback","protocols","options","socketId","socketIndex","_webSocket","setCloseCallback","statusCode","closeReason","messages","setOnMessageCallback","message","setOnCloseCallback","serverClose","setOnErrorCallback","serverError","_enableXHRInterception","_enableWebSocketInterception","disableInterception","requestItem","details","Object","keys","map","key","detailViewRow","detailViewText","detailKeyCellView","detailValueCellView","closeButton","closeButtonText","detailScrollView","scrollRef","rowId","container","_renderItemDetail","listViewTitle","urlTitleCellView","methodTitleCellView","listView","Component","create","paddingTop","paddingBottom","paddingLeft","paddingRight","flex","flexDirection","backgroundColor","color","fontSize","borderColor","borderTopWidth","borderBottomWidth","borderRightWidth","alignItems","justifyContent","borderLeftWidth","marginTop","marginBottom","paddingHorizontal","module","exports"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {RenderItemProps} from '../Lists/VirtualizedList';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst TouchableHighlight = require('../Components/Touchable/TouchableHighlight');\nconst View = require('../Components/View/View');\nconst FlatList = require('../Lists/FlatList');\nconst XHRInterceptor = require('../Network/XHRInterceptor');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst WebSocketInterceptor = require('../WebSocket/WebSocketInterceptor');\nconst React = require('react');\n\nconst LISTVIEW_CELL_HEIGHT = 15;\n\n// Global id for the intercepted XMLHttpRequest objects.\nlet nextXHRId = 0;\n\ntype NetworkRequestInfo = {\n  id: number,\n  type?: string,\n  url?: string,\n  method?: string,\n  status?: number,\n  dataSent?: any,\n  responseContentType?: string,\n  responseSize?: number,\n  requestHeaders?: Object,\n  responseHeaders?: string,\n  response?: Object | string,\n  responseURL?: string,\n  responseType?: string,\n  timeout?: number,\n  closeReason?: string,\n  messages?: string,\n  serverClose?: Object,\n  serverError?: Object,\n  ...\n};\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  detailRowId: ?number,\n  requests: Array<NetworkRequestInfo>,\n|};\n\nfunction getStringByValue(value: any): string {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  if (typeof value === 'string' && value.length > 500) {\n    return String(value)\n      .substr(0, 500)\n      .concat('\\n***TRUNCATED TO 500 CHARACTERS***');\n  }\n  return value;\n}\n\nfunction getTypeShortName(type: any): string {\n  if (type === 'XMLHttpRequest') {\n    return 'XHR';\n  } else if (type === 'WebSocket') {\n    return 'WS';\n  }\n\n  return '';\n}\n\nfunction keyExtractor(request: NetworkRequestInfo): string {\n  return String(request.id);\n}\n\n/**\n * Show all the intercepted network requests over the InspectorPanel.\n */\nclass NetworkOverlay extends React.Component<Props, State> {\n  _requestsListView: ?React.ElementRef<typeof FlatList>;\n  _detailScrollView: ?React.ElementRef<typeof ScrollView>;\n\n  // Metrics are used to decide when if the request list should be sticky, and\n  // scroll to the bottom as new network requests come in, or if the user has\n  // intentionally scrolled away from the bottom - to instead flash the scroll bar\n  // and keep the current position\n  _requestsListViewScrollMetrics: {\n    contentLength: number,\n    offset: number,\n    visibleLength: number,\n  } = {\n    offset: 0,\n    visibleLength: 0,\n    contentLength: 0,\n  };\n\n  // Map of `socketId` -> `index in `this.state.requests`.\n  _socketIdMap: {[string]: number} = {};\n  // Map of `xhr._index` -> `index in `this.state.requests`.\n  _xhrIdMap: {[key: number]: number, ...} = {};\n\n  state: State = {\n    detailRowId: null,\n    requests: [],\n  };\n\n  _enableXHRInterception(): void {\n    if (XHRInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the XHR request item in listView as soon as it was opened.\n    XHRInterceptor.setOpenCallback((method, url, xhr) => {\n      // Generate a global id for each intercepted xhr object, add this id\n      // to the xhr object as a private `_index` property to identify it,\n      // so that we can distinguish different xhr objects in callbacks.\n      xhr._index = nextXHRId++;\n      const xhrIndex = this.state.requests.length;\n      this._xhrIdMap[xhr._index] = xhrIndex;\n\n      const _xhr: NetworkRequestInfo = {\n        id: xhrIndex,\n        type: 'XMLHttpRequest',\n        method: method,\n        url: url,\n      };\n      this.setState(\n        {\n          requests: this.state.requests.concat(_xhr),\n        },\n        this._indicateAdditionalRequests,\n      );\n    });\n\n    XHRInterceptor.setRequestHeaderCallback((header, value, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        if (!networkRequestInfo.requestHeaders) {\n          networkRequestInfo.requestHeaders = ({}: {[any]: any});\n        }\n        networkRequestInfo.requestHeaders[header] = value;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setSendCallback((data, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        networkRequestInfo.dataSent = data;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setHeaderReceivedCallback(\n      (type, size, responseHeaders, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.responseContentType = type;\n          networkRequestInfo.responseSize = size;\n          networkRequestInfo.responseHeaders = responseHeaders;\n          return {requests};\n        });\n      },\n    );\n\n    XHRInterceptor.setResponseCallback(\n      (status, timeout, response, responseURL, responseType, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.status = status;\n          networkRequestInfo.timeout = timeout;\n          networkRequestInfo.response = response;\n          networkRequestInfo.responseURL = responseURL;\n          networkRequestInfo.responseType = responseType;\n\n          return {requests};\n        });\n      },\n    );\n\n    // Fire above callbacks.\n    XHRInterceptor.enableInterception();\n  }\n\n  _enableWebSocketInterception(): void {\n    if (WebSocketInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the WebSocket request item in listView when 'connect' is called.\n    WebSocketInterceptor.setConnectCallback(\n      (url, protocols, options, socketId) => {\n        const socketIndex = this.state.requests.length;\n        this._socketIdMap[socketId] = socketIndex;\n        const _webSocket: NetworkRequestInfo = {\n          id: socketIndex,\n          type: 'WebSocket',\n          url: url,\n          protocols: protocols,\n        };\n        this.setState(\n          {\n            requests: this.state.requests.concat(_webSocket),\n          },\n          this._indicateAdditionalRequests,\n        );\n      },\n    );\n\n    WebSocketInterceptor.setCloseCallback(\n      (statusCode, closeReason, socketId) => {\n        const socketIndex = this._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        if (statusCode !== null && closeReason !== null) {\n          this.setState(({requests}) => {\n            const networkRequestInfo = requests[socketIndex];\n            networkRequestInfo.status = statusCode;\n            networkRequestInfo.closeReason = closeReason;\n            return {requests};\n          });\n        }\n      },\n    );\n\n    WebSocketInterceptor.setSendCallback((data, socketId) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages += 'Sent: ' + JSON.stringify(data) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnMessageCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages +=\n          'Received: ' + JSON.stringify(message) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnCloseCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverClose = message;\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnErrorCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverError = message;\n\n        return {requests};\n      });\n    });\n\n    // Fire above callbacks.\n    WebSocketInterceptor.enableInterception();\n  }\n\n  componentDidMount() {\n    this._enableXHRInterception();\n    this._enableWebSocketInterception();\n  }\n\n  componentWillUnmount() {\n    XHRInterceptor.disableInterception();\n    WebSocketInterceptor.disableInterception();\n  }\n\n  _renderItem = ({\n    item,\n    index,\n  }: RenderItemProps<NetworkRequestInfo>): React.Element<any> => {\n    const tableRowViewStyle = [\n      styles.tableRow,\n      index % 2 === 1 ? styles.tableRowOdd : styles.tableRowEven,\n      index === this.state.detailRowId && styles.tableRowPressed,\n    ];\n    const urlCellViewStyle = styles.urlCellView;\n    const methodCellViewStyle = styles.methodCellView;\n\n    return (\n      <TouchableHighlight\n        onPress={() => {\n          this._pressRow(index);\n        }}>\n        <View>\n          <View style={tableRowViewStyle}>\n            <View style={urlCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {item.url}\n              </Text>\n            </View>\n            <View style={methodCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {getTypeShortName(item.type)}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </TouchableHighlight>\n    );\n  };\n\n  _renderItemDetail(id: number): React.Node {\n    const requestItem = this.state.requests[id];\n    const details = Object.keys(requestItem).map(key => {\n      if (key === 'id') {\n        return;\n      }\n      return (\n        <View style={styles.detailViewRow} key={key}>\n          <Text style={[styles.detailViewText, styles.detailKeyCellView]}>\n            {key}\n          </Text>\n          <Text style={[styles.detailViewText, styles.detailValueCellView]}>\n            {getStringByValue(requestItem[key])}\n          </Text>\n        </View>\n      );\n    });\n\n    return (\n      <View>\n        <TouchableHighlight\n          style={styles.closeButton}\n          onPress={this._closeButtonClicked}>\n          <View>\n            <Text style={styles.closeButtonText}>v</Text>\n          </View>\n        </TouchableHighlight>\n        <ScrollView\n          style={styles.detailScrollView}\n          ref={scrollRef => (this._detailScrollView = scrollRef)}>\n          {details}\n        </ScrollView>\n      </View>\n    );\n  }\n\n  _indicateAdditionalRequests = (): void => {\n    if (this._requestsListView) {\n      const distanceFromEndThreshold = LISTVIEW_CELL_HEIGHT * 2;\n      const {offset, visibleLength, contentLength} =\n        this._requestsListViewScrollMetrics;\n      const distanceFromEnd = contentLength - visibleLength - offset;\n      const isCloseToEnd = distanceFromEnd <= distanceFromEndThreshold;\n      if (isCloseToEnd) {\n        this._requestsListView.scrollToEnd();\n      } else {\n        this._requestsListView.flashScrollIndicators();\n      }\n    }\n  };\n\n  _captureRequestsListView = (listRef: ?FlatList<NetworkRequestInfo>): void => {\n    this._requestsListView = listRef;\n  };\n\n  _requestsListViewOnScroll = (e: Object): void => {\n    this._requestsListViewScrollMetrics.offset = e.nativeEvent.contentOffset.y;\n    this._requestsListViewScrollMetrics.visibleLength =\n      e.nativeEvent.layoutMeasurement.height;\n    this._requestsListViewScrollMetrics.contentLength =\n      e.nativeEvent.contentSize.height;\n  };\n\n  /**\n   * Popup a scrollView to dynamically show detailed information of\n   * the request, when pressing a row in the network flow listView.\n   */\n  _pressRow(rowId: number): void {\n    this.setState({detailRowId: rowId}, this._scrollDetailToTop);\n  }\n\n  _scrollDetailToTop = (): void => {\n    if (this._detailScrollView) {\n      this._detailScrollView.scrollTo({\n        y: 0,\n        animated: false,\n      });\n    }\n  };\n\n  _closeButtonClicked = () => {\n    this.setState({detailRowId: null});\n  };\n\n  _getRequestIndexByXHRID(index: number): number {\n    if (index === undefined) {\n      return -1;\n    }\n    const xhrIndex = this._xhrIdMap[index];\n    if (xhrIndex === undefined) {\n      return -1;\n    } else {\n      return xhrIndex;\n    }\n  }\n\n  render(): React.Node {\n    const {requests, detailRowId} = this.state;\n\n    return (\n      <View style={styles.container}>\n        {detailRowId != null && this._renderItemDetail(detailRowId)}\n        <View style={styles.listViewTitle}>\n          {requests.length > 0 && (\n            <View style={styles.tableRow}>\n              <View style={styles.urlTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  URL\n                </Text>\n              </View>\n              <View style={styles.methodTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  Type\n                </Text>\n              </View>\n            </View>\n          )}\n        </View>\n\n        <FlatList\n          ref={this._captureRequestsListView}\n          onScroll={this._requestsListViewOnScroll}\n          style={styles.listView}\n          data={requests}\n          renderItem={this._renderItem}\n          keyExtractor={keyExtractor}\n          extraData={this.state}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  listViewTitle: {\n    height: 20,\n  },\n  listView: {\n    flex: 1,\n    height: 60,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    flex: 1,\n    height: LISTVIEW_CELL_HEIGHT,\n  },\n  tableRowEven: {\n    backgroundColor: '#555',\n  },\n  tableRowOdd: {\n    backgroundColor: '#000',\n  },\n  tableRowPressed: {\n    backgroundColor: '#3B5998',\n  },\n  cellText: {\n    color: 'white',\n    fontSize: 12,\n  },\n  methodTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 1,\n  },\n  urlTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  methodCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  urlCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  detailScrollView: {\n    flex: 1,\n    height: 180,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  detailKeyCellView: {\n    flex: 1.3,\n  },\n  detailValueCellView: {\n    flex: 2,\n  },\n  detailViewRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 3,\n  },\n  detailViewText: {\n    color: 'white',\n    fontSize: 11,\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 10,\n  },\n  closeButton: {\n    marginTop: 5,\n    backgroundColor: '#888',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nmodule.exports = NetworkOverlay;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}