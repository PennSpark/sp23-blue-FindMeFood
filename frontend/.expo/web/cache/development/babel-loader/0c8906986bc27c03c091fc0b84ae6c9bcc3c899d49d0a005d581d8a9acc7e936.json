{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar PressabilityPerformanceEventEmitter = function () {\n  function PressabilityPerformanceEventEmitter() {\n    _classCallCheck(this, PressabilityPerformanceEventEmitter);\n    this._listeners = [];\n  }\n  _createClass(PressabilityPerformanceEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(listener) {\n      this._listeners.push(listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      var index = this._listeners.indexOf(listener);\n      if (index > -1) {\n        this._listeners.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(constructEvent) {\n      if (this._listeners.length === 0) {\n        return;\n      }\n      var event = constructEvent();\n      this._listeners.forEach(function (listener) {\n        return listener(event);\n      });\n    }\n  }]);\n  return PressabilityPerformanceEventEmitter;\n}();\nvar PressabilityPerformanceEventEmitterSingleton = new PressabilityPerformanceEventEmitter();\nexport default PressabilityPerformanceEventEmitterSingleton;","map":{"version":3,"names":["PressabilityPerformanceEventEmitter","_listeners","listener","push","index","indexOf","splice","constructEvent","length","event","forEach","PressabilityPerformanceEventEmitterSingleton"],"sources":["/Users/jamesbaker/Desktop/spark_projs/sp23-blue-FindMeFood/frontend/node_modules/react-native/Libraries/Pressability/PressabilityPerformanceEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport {type PressabilityTouchSignal as TouchSignal} from './PressabilityTypes.js';\n\nexport type PressabilityPerformanceEvent = $ReadOnly<{|\n  signal: TouchSignal,\n  nativeTimestamp: number,\n|}>;\nexport type PressabilityPerformanceEventListener =\n  PressabilityPerformanceEvent => void;\n\nclass PressabilityPerformanceEventEmitter {\n  _listeners: Array<PressabilityPerformanceEventListener> = [];\n\n  constructor() {}\n\n  addListener(listener: PressabilityPerformanceEventListener): void {\n    this._listeners.push(listener);\n  }\n\n  removeListener(listener: PressabilityPerformanceEventListener): void {\n    const index = this._listeners.indexOf(listener);\n    if (index > -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  emitEvent(constructEvent: () => PressabilityPerformanceEvent): void {\n    if (this._listeners.length === 0) {\n      return;\n    }\n\n    const event = constructEvent();\n    this._listeners.forEach(listener => listener(event));\n  }\n}\n\nconst PressabilityPerformanceEventEmitterSingleton: PressabilityPerformanceEventEmitter =\n  new PressabilityPerformanceEventEmitter();\n\nexport default PressabilityPerformanceEventEmitterSingleton;\n"],"mappings":";;IAmBMA,mCAAmC;EAGvC,+CAAc;IAAA;IAAA,KAFdC,UAAU,GAAgD,EAAE;EAE7C;EAAC;IAAA;IAAA,OAEhB,qBAAYC,QAA8C,EAAQ;MAChE,IAAI,CAACD,UAAU,CAACE,IAAI,CAACD,QAAQ,CAAC;IAChC;EAAC;IAAA;IAAA,OAED,wBAAeA,QAA8C,EAAQ;MACnE,IAAME,KAAK,GAAG,IAAI,CAACH,UAAU,CAACI,OAAO,CAACH,QAAQ,CAAC;MAC/C,IAAIE,KAAK,GAAG,CAAC,CAAC,EAAE;QACd,IAAI,CAACH,UAAU,CAACK,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAClC;IACF;EAAC;IAAA;IAAA,OAED,mBAAUG,cAAkD,EAAQ;MAClE,IAAI,IAAI,CAACN,UAAU,CAACO,MAAM,KAAK,CAAC,EAAE;QAChC;MACF;MAEA,IAAMC,KAAK,GAAGF,cAAc,EAAE;MAC9B,IAAI,CAACN,UAAU,CAACS,OAAO,CAAC,UAAAR,QAAQ;QAAA,OAAIA,QAAQ,CAACO,KAAK,CAAC;MAAA,EAAC;IACtD;EAAC;EAAA;AAAA;AAGH,IAAME,4CAAiF,GACrF,IAAIX,mCAAmC,EAAE;AAE3C,eAAeW,4CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}